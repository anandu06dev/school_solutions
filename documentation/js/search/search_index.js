var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,2.201,1,2.201]],["body/components/AppComponent.html",[0,2.327,1,1.688,2,1.559,3,0.088,4,0.078,5,0.876,6,2.108,7,0.876,8,0.876,9,0.078,10,0.737,11,0.737,12,2.108,13,2.601,14,2.108,15,1.559,16,2.108,17,1.559,18,1.559,19,0.398,20,0.577,21,2.933,22,0.154,23,0.028,24,0.21,25,0.478,26,0.578,27,1.559,28,0.167,29,0.876,30,0.088,31,0.737,32,0.088,33,0.003,34,1.313,35,5.244,36,2.558,37,2.558,38,1.559,39,1.559,40,3.252,41,2.399,42,1.559,43,1.559,44,1.559,45,1.559,46,1.559,47,5.747,48,2.558,49,1.559,50,3.252,51,2.558,52,1.559,53,4.153,54,1.559,55,5.244,56,1.559,57,2.558,58,1.559,59,1.559,60,1.559,61,1.559,62,1.559,63,1.559,64,1.559,65,1.559,66,1.559,67,1.559,68,5.988,69,4.921,70,4.673,71,1.559,72,1.559,73,5.484,74,0.932,75,4.463,76,4.921,77,3.762,78,4.921,79,4.713,80,4.463,81,5.669,82,2.558,83,5.095,84,4.713,85,4.713,86,5.244,87,5.244,88,3.252,89,3.762,90,3.252,91,3.252,92,1.559,93,5.244,94,2.153,95,3.762,96,4.463,97,2.558,98,2.558,99,1.559,100,1.559,101,4.153,102,1.559,103,2.399,104,1.559,105,4.463,106,3.762,107,5.816,108,1.559,109,2.558,110,1.029,111,3.252,112,3.762,113,3.252,114,1.559,115,2.558,116,5.582,117,2.558,118,2.558,119,1.559,120,4.463,121,2.558,122,3.252,123,1.559,124,3.762,125,4.463,126,4.153,127,3.252,128,1.559,129,1.559,130,1.559,131,1.559,132,2.558,133,1.559,134,2.558,135,1.097,136,3.252,137,1.559,138,1.559,139,1.559,140,1.559,141,3.762,142,2.558,143,2.558,144,2.558,145,3.252,146,2.558,147,4.153,148,3.252,149,1.559,150,3.762,151,1.559,152,3.762,153,1.559,154,2.558,155,2.558,156,3.252,157,1.559,158,1.559,159,2.558,160,1.559,161,2.558,162,3.762,163,1.559,164,3.252,165,3.762,166,1.559,167,1.559,168,1.559,169,2.558,170,2.558,171,1.559,172,2.558,173,2.558,174,1.559,175,1.559,176,3.252,177,1.559,178,1.559,179,1.559,180,1.559,181,1.559,182,2.558,183,1.559,184,1.559,185,1.559,186,1.559,187,3.252,188,1.559,189,2.558,190,1.559,191,2.153,192,1.559,193,1.559,194,1.559,195,1.559,196,1.559,197,1.559,198,2.558,199,2.558,200,2.558,201,1.559,202,1.559,203,1.559,204,1.559,205,1.559,206,1.559,207,1.559,208,1.559,209,1.559,210,1.559,211,2.558,212,1.559,213,3.252,214,4.153,215,2.558,216,1.559,217,1.559,218,1.559,219,2.558,220,2.558,221,2.558,222,1.559,223,2.558,224,1.559,225,1.559,226,1.559,227,1.559,228,1.559,229,1.559,230,1.559,231,1.559,232,1.559,233,1.559,234,1.559,235,2.558,236,2.558,237,1.559,238,1.559,239,1.559,240,1.559,241,1.559,242,1.559,243,1.559,244,1.559,245,1.559,246,2.558,247,2.558,248,1.559,249,1.559,250,1.313,251,1.559,252,1.559,253,1.15,254,1.559,255,4.316,256,1.559,257,1.15,258,1.559,259,1.559,260,2.558,261,1.559,262,1.559,263,0.783,264,4.153,265,1.559,266,1.15,267,1.559,268,1.313,269,1.313,270,1.313,271,2.558,272,1.15,273,4.463,274,1.559,275,1.559,276,1.559,277,1.559,278,1.559,279,1.313,280,1.559,281,1.559,282,1.559,283,0.876,284,1.559,285,1.559,286,1.559,287,1.559,288,0.876,289,1.559,290,1.559,291,0.876,292,2.558,293,0.876,294,0.433,295,0.876,296,0.876,297,0.006,298,0.006]],["title/injectables/AppConfigService.html",[299,1.233,300,1.822]],["body/injectables/AppConfigService.html",[3,0.348,4,0.309,9,0.309,19,0.472,22,0.993,23,0.028,24,1.452,28,1.123,30,0.588,32,0.348,33,0.014,263,1.744,294,1.564,297,0.019,298,0.019,299,1.726,300,2.55,301,1.898,302,2.924,303,1.857,304,2.162,305,4.467,306,3.079,307,2.343,308,2.791,309,3.929,310,3.473,311,4.745,312,3.473,313,2.417,314,2.417,315,4.667,316,4.667,317,3.37,318,3.473,319,3.473,320,2.243,321,3.76,322,3.473,323,2.343,324,3.473,325,1.726,326,2.791,327,3.473,328,0.833,329,2.924,330,1.898,331,1.898,332,2.924,333,2.55,334,2.563,335,3.473,336,2.563,337,1.382,338,2.077,339,2.563,340,3.473,341,3.473,342,3.473,343,3.473,344,3.473,345,3.473,346,3.473,347,3.473,348,1.949,349,3.473,350,3.473,351,3.473,352,2.924,353,3.473]],["title/controllers/AppController.html",[354,1.233,355,2.201]],["body/controllers/AppController.html",[3,0.466,4,0.415,9,0.415,19,0.633,23,0.028,24,1.351,28,0.89,30,0.563,32,0.466,33,0.019,297,0.023,298,0.023,303,2.241,320,1.854,328,1.118,337,1.854,348,1.723,354,2.082,355,3.716,356,1.603,357,3.923,358,5.291,359,1.389,360,4.66,361,3.305,362,3.923,363,2.787,364,4.66]],["title/modules/AppModule.html",[365,1.068,366,2.201]],["body/modules/AppModule.html",[3,0.377,4,0.335,9,0.335,23,0.028,30,0.648,32,0.377,33,0.015,135,1.617,297,0.02,298,0.02,328,0.904,330,2.059,338,2.946,355,3.623,356,1.695,361,3.385,362,3.174,365,1.578,366,4.312,367,1.888,368,2.113,369,3.174,370,3.174,371,3.174,372,3.385,373,3.448,374,2.474,375,1.892,376,2.781,377,2.692,378,2.999,379,4.295,380,2.781,381,3.282,382,3.769,383,3.769,384,2.254,385,3.769,386,2.781,387,3.769,388,3.769,389,3.769,390,2.692,391,1.892,392,3.174,393,3.174,394,3.174,395,3.174]],["title/modules/AppRoutingModule.html",[365,1.068,396,2.201]],["body/modules/AppRoutingModule.html",[3,0.484,4,0.431,9,0.431,23,0.028,30,0.576,31,4.074,32,0.484,33,0.019,297,0.024,298,0.024,338,2.894,367,1.665,378,2.644,396,3.801,397,4.839,398,4.839,399,5.759,400,5.759,401,4.537,402,4.839,403,4.839,404,4.074]],["title/injectables/AppService.html",[299,1.233,361,1.822]],["body/injectables/AppService.html",[3,0.481,4,0.428,9,0.428,19,0.653,23,0.028,24,1.377,28,0.919,30,0.481,32,0.481,33,0.019,297,0.024,298,0.024,299,2.122,301,2.628,303,2.284,320,1.914,328,1.154,348,1.779,358,5.348,361,3.135,405,4.05,406,4.811,407,4.811]],["title/classes/Cat.html",[33,0.013,408,1.994]],["body/classes/Cat.html",[3,0.419,4,0.372,9,0.372,19,0.568,20,1.948,22,1.016,23,0.028,24,1.452,28,1.101,30,0.419,32,0.419,33,0.017,74,3.15,294,1.731,297,0.022,298,0.022,359,1.57,408,3.91,409,1.665,410,3.522,411,4.118,412,5.252,413,2.096,414,3.477,415,2.804,416,4.184,417,5.268,418,5.268,419,4.184,420,4.184,421,3.15,422,1.547,423,3.806,424,4.184]],["title/controllers/CatsController.html",[354,1.233,425,2.201]],["body/controllers/CatsController.html",[3,0.363,4,0.323,9,0.323,19,0.493,22,1.01,23,0.028,24,1.292,28,0.917,30,0.597,32,0.363,33,0.014,294,1.333,297,0.02,298,0.02,303,1.912,304,2.657,305,3.974,307,2.412,313,2.06,314,2.06,320,1.912,321,2.873,323,1.821,325,1.776,328,0.87,337,1.443,348,1.776,354,1.341,356,1.248,359,1.432,363,2.169,408,3.666,415,2.657,422,1.341,425,3.171,426,3.054,427,2.394,428,3.054,429,3.627,430,3.666,431,2.676,432,3.627,433,3.545,434,3.545,435,3.627,436,3.054,437,3.545,438,3.545,439,3.545,440,3.627,441,2.394,442,2.676,443,3.171,444,3.545,445,3.545,446,3.974,447,2.394,448,2.943,449,3.054,450,1.982,451,3.054,452,3.054,453,3.627,454,3.627,455,2.676,456,3.545,457,2.394,458,3.627,459,2.676,460,2.676,461,3.627]],["title/modules/CatsModule.html",[365,1.068,384,1.994]],["body/modules/CatsModule.html",[3,0.46,4,0.409,9,0.409,23,0.028,30,0.602,32,0.46,33,0.018,135,1.971,297,0.023,298,0.023,328,1.102,356,1.92,365,1.787,367,1.581,368,2.394,374,2.803,375,2.307,377,3.05,384,3.897,425,3.969,448,3.56,449,3.868,462,3.868,463,3.868,464,4.595,465,4.595]],["title/injectables/CatsService.html",[299,1.233,448,1.822]],["body/injectables/CatsService.html",[3,0.403,4,0.359,9,0.359,19,0.547,20,1.902,22,0.998,23,0.028,25,2.201,26,2.66,28,1.082,30,0.567,32,0.403,33,0.016,294,1.427,297,0.021,298,0.021,299,1.902,301,2.201,303,2.047,304,2.383,307,2.582,313,2.206,314,2.206,320,2.047,323,2.582,325,1.49,328,0.967,336,4.181,337,2.255,348,1.902,408,3.919,413,2.255,428,4.771,430,3.57,448,2.81,450,2.201,451,3.392,452,3.392,466,3.392,467,5.144,468,4.029,469,4.029,470,4.029,471,4.029,472,4.029]],["title/controllers/ConfigController.html",[354,1.233,473,2.201]],["body/controllers/ConfigController.html",[3,0.375,4,0.333,9,0.333,19,0.508,22,0.964,23,0.028,28,0.937,30,0.603,32,0.375,33,0.015,263,2.462,294,1.039,297,0.02,298,0.02,300,2.68,303,1.952,304,2.69,306,3.172,313,1.606,314,1.606,317,3.698,320,1.952,321,3.472,328,0.898,332,3.152,333,2.989,334,2.762,337,1.49,339,2.762,348,1.814,354,1.384,356,1.288,359,1.462,363,2.239,379,2.762,415,2.69,422,1.384,427,2.471,431,2.762,433,3.619,434,3.619,437,3.619,438,3.619,439,3.619,441,2.471,443,3.238,444,3.619,445,3.619,446,4.036,447,2.471,455,2.762,456,3.619,457,2.471,473,3.238,474,3.152,475,3.743,476,3.743,477,3.743,478,3.152,479,3.743,480,3.152,481,3.743,482,3.743,483,3.152,484,3.743,485,3.743]],["title/classes/ConfigDto.html",[33,0.013,317,1.994]],["body/classes/ConfigDto.html",[3,0.411,4,0.366,9,0.366,19,0.558,20,1.926,22,1.06,23,0.028,28,1.148,30,0.521,32,0.411,33,0.021,297,0.021,298,0.021,317,3.115,337,2.667,359,1.792,409,1.636,421,3.39,422,1.52,486,3.46,487,4.815,488,4.815,489,4.815,490,4.815,491,4.301,492,6.013,493,4.11,494,4.11,495,4.11,496,4.11,497,6.205,498,2.458]],["title/classes/ConfigEntity.html",[33,0.013,333,1.822]],["body/classes/ConfigEntity.html",[3,0.351,4,0.312,9,0.312,19,0.477,20,1.738,22,1.125,23,0.028,25,3.443,28,1.184,30,0.351,32,0.351,33,0.014,110,3.895,297,0.019,298,0.019,325,1.96,331,1.918,333,2.568,359,1.849,409,1.397,413,1.871,487,4.462,488,4.462,489,4.462,490,4.462,491,4.16,499,2.956,500,6.073,501,5.299,502,5.299,503,4.765,504,4.65,505,3.511,506,3.736,507,2.956,508,4.765,509,3.103,510,3.511,511,3.511,512,3.91,513,3.511,514,3.511,515,2.956,516,3.958,517,4.765,518,3.511,519,3.511,520,3.958,521,3.468,522,3.958]],["title/modules/ConfigModule.html",[365,1.068,391,1.674]],["body/modules/ConfigModule.html",[3,0.445,4,0.396,9,0.396,23,0.028,30,0.635,32,0.445,33,0.018,135,1.906,297,0.022,298,0.022,300,3.532,328,1.066,330,2.428,333,2.428,334,3.28,356,1.882,365,1.752,367,1.529,368,2.346,374,2.746,375,2.232,377,2.989,378,2.428,381,2.658,391,3.245,473,3.912,480,3.742,523,3.742,524,3.742,525,4.445,526,4.445,527,4.445]],["title/modules/CoreModule.html",[365,1.068,372,1.822]],["body/modules/CoreModule.html",[3,0.45,4,0.4,9,0.4,23,0.028,30,0.596,32,0.45,33,0.018,135,1.927,297,0.023,298,0.023,328,1.078,339,3.316,356,1.546,365,1.763,367,1.546,368,2.362,372,3.541,374,2.765,375,2.256,377,2.455,378,3.009,380,3.316,391,3.197,404,3.783,483,3.783,528,4.494,529,4.494,530,4.494,531,4.494,532,4.494,533,3.316,534,4.494,535,4.494]],["title/classes/CreateCatDto.html",[33,0.013,430,1.994]],["body/classes/CreateCatDto.html",[3,0.433,4,0.385,9,0.385,19,0.588,20,1.99,22,1.032,23,0.028,24,1.47,28,1.118,30,0.433,32,0.433,33,0.021,294,1.625,297,0.022,298,0.022,337,2.641,359,1.745,409,1.722,411,3.865,412,4.93,413,2.141,430,3.217,498,2.588,536,5.158,537,3.643,538,5.855,539,4.327,540,4.649,541,4.327,542,4.327]],["title/classes/CreateStudentDto.html",[33,0.013,543,1.994]],["body/classes/CreateStudentDto.html",[3,0.16,4,0.142,9,0.142,19,0.217,20,0.965,22,1.183,23,0.028,24,1.619,28,1.149,30,0.331,32,0.16,33,0.017,294,1.532,297,0.011,298,0.011,359,1.794,409,0.636,413,1.038,414,3.902,415,3.02,421,3.313,422,0.591,423,4.031,498,0.956,506,3.573,540,4.403,543,1.561,544,5.106,545,1.179,546,2.44,547,2.44,548,2.44,549,2.44,550,2.44,551,2.44,552,3.393,553,2.44,554,2.44,555,2.44,556,2.44,557,2.44,558,2.44,559,2.44,560,2.44,561,2.44,562,2.44,563,2.44,564,2.44,565,2.817,566,2.817,567,2.52,568,4.788,569,1.925,570,1.598,571,1.598,572,2.808,573,1.179,574,2.817,575,2.283,576,1.925,577,2.888,578,1.925,579,1.598,580,1.598,581,4.535,582,4.632,583,1.925,584,2.61,585,1.598,586,1.925,587,1.925,588,5.287,589,1.598,590,2.817,591,1.598,592,1.925,593,1.598,594,1.345,595,1.925,596,2.183,597,1.598,598,1.598,599,1.925,600,1.598,601,1.598,602,1.598,603,1.345,604,1.925,605,1.598,606,1.925,607,1.925,608,1.598,609,2.817,610,1.925,611,1.598,612,3.331,613,2.817,614,1.345,615,1.925,616,1.598,617,1.925,618,1.598,619,1.345,620,1.598,621,1.925,622,1.598,623,1.925,624,1.598,625,1.598,626,1.925,627,1.598,628,1.179,629,2.785,630,1.345,631,5.106,632,0.956,633,1.345,634,1.179,635,1.345,636,1.179,637,1.179]],["title/classes/CreateUserDto.html",[33,0.013,638,1.994]],["body/classes/CreateUserDto.html",[3,0.348,4,0.309,9,0.309,19,0.472,20,1.726,22,1.122,23,0.028,24,1.587,28,1.216,30,0.348,32,0.467,33,0.014,297,0.019,298,0.019,359,1.899,409,1.382,411,3.479,413,1.857,421,3.671,422,1.284,491,3.081,509,2.293,572,2.88,573,2.563,575,3.152,596,3.081,632,3.152,638,2.791,639,4.749,640,2.563,641,4.438,642,4.438,643,4.438,644,4.438,645,4.438,646,4.438,647,4.438,648,3.473,649,3.473,650,3.473,651,3.473,652,3.473,653,3.473,654,3.473,655,3.473,656,3.473,657,4.438,658,2.924]],["title/classes/Student.html",[33,0.013,577,1.822]],["body/classes/Student.html",[3,0.128,4,0.114,9,0.114,19,0.174,20,0.803,22,1.189,23,0.028,24,1.596,25,1.817,28,1.125,30,0.283,32,0.128,33,0.013,74,1.298,103,1.601,110,3.823,191,5.095,294,1.43,297,0.009,298,0.009,325,0.803,331,0.7,359,1.756,409,0.51,413,1.803,414,3.746,415,2.958,421,3.193,422,0.474,423,3.889,504,4.627,506,3.786,507,1.078,508,2.8,509,1.432,512,1.601,515,1.078,516,1.827,517,2.8,520,1.827,521,1.601,522,1.827,546,2.084,547,2.084,548,2.084,549,2.084,550,2.084,551,2.084,552,2.844,553,2.084,554,2.084,555,2.084,556,2.084,557,2.084,558,2.084,559,2.084,560,2.084,561,2.084,562,2.084,563,2.084,564,2.084,565,2.454,566,2.454,567,2.195,568,4.658,569,2.454,572,2.877,573,0.945,574,2.454,575,1.989,576,1.601,577,2.816,578,1.601,581,4.347,582,4.465,583,1.601,586,1.601,587,1.601,590,2.454,592,1.601,595,1.601,596,3.32,599,1.601,604,1.601,606,1.601,607,1.601,609,2.454,610,1.601,612,2.983,613,2.454,615,1.601,617,1.601,619,1.078,621,1.601,623,1.601,626,1.601,628,0.945,632,0.766,634,0.945,636,0.945,637,0.945,659,1.078,660,2.378,661,2.824,662,2.824,663,1.28,664,6.271,665,1.28,666,1.28,667,1.28,668,1.28,669,1.28,670,1.28,671,2.17,672,6.051,673,6.174,674,1.28,675,4.886,676,1.28,677,1.28,678,1.28,679,2.17,680,1.827,681,1.28,682,1.28,683,1.28,684,1.28,685,2.17,686,1.28,687,1.28,688,1.28,689,1.28,690,1.28,691,1.28,692,1.28,693,1.28,694,1.28,695,1.28,696,1.28,697,1.28,698,1.28,699,1.28,700,1.28,701,1.078]],["title/controllers/StudentsController.html",[354,1.233,702,2.201]],["body/controllers/StudentsController.html",[3,0.335,4,0.298,9,0.298,19,0.455,22,0.979,23,0.028,24,1.517,28,1.109,30,0.581,32,0.335,33,0.013,294,1.541,297,0.019,298,0.019,303,1.813,304,2.111,306,3.034,307,2.288,308,2.725,313,2.382,314,2.382,320,2.311,323,1.683,325,2.216,326,2.005,328,0.804,337,1.334,348,2.148,354,1.24,356,1.153,359,1.731,363,2.005,422,1.24,427,2.213,441,3.008,442,2.474,443,3.417,447,2.213,450,1.831,457,2.213,459,3.362,460,2.474,543,3.583,702,3.008,703,2.823,704,2.823,705,4.358,706,2.823,707,3.352,708,3.352,709,3.352,710,3.836,711,3.352,712,2.823,713,3.73,714,4.557,715,3.352,716,3.352,717,2.823,718,2.828,719,2.823,720,3.836,721,2.823,722,3.352,723,3.352,724,3.352,725,3.352,726,3.352,727,3.352,728,3.352,729,2.823,730,3.352]],["title/modules/StudentsModule.html",[365,1.068,373,1.822]],["body/modules/StudentsModule.html",[3,0.46,4,0.409,9,0.409,23,0.028,30,0.602,32,0.46,33,0.018,135,1.971,297,0.023,298,0.023,328,1.102,356,1.92,365,1.787,367,1.581,368,2.394,373,3.56,374,2.803,375,2.307,377,3.05,702,3.969,718,3.56,719,3.868,731,3.868,732,3.868,733,4.595,734,4.595]],["title/injectables/StudentsService.html",[299,1.233,718,1.822]],["body/injectables/StudentsService.html",[3,0.324,4,0.288,9,0.288,19,0.44,22,1.011,23,0.028,24,1.524,28,1.132,30,0.509,32,0.324,33,0.013,263,1.626,294,1.592,297,0.018,298,0.018,299,1.646,301,1.77,303,1.771,304,2.062,306,2.991,307,2.235,308,2.662,313,2.462,314,2.462,320,2.498,323,2.235,325,2.321,326,2.662,328,0.777,338,2.662,348,2.193,413,2.552,450,1.77,543,3.432,577,3.135,704,2.728,705,3.748,706,3.748,712,3.748,713,3.632,718,2.432,720,3.748,721,2.728,735,2.728,736,4.451,737,3.24,738,3.24,739,3.24,740,4.451,741,3.24,742,3.24,743,3.24,744,4.993,745,3.24,746,3.24,747,4.451,748,3.24,749,3.24,750,3.24,751,3.24,752,3.24,753,3.24,754,3.24]],["title/classes/UpdateStudentDto.html",[33,0.013,713,1.994]],["body/classes/UpdateStudentDto.html",[3,0.152,4,0.135,9,0.135,19,0.206,20,0.924,22,1.181,23,0.028,24,1.613,28,1.146,30,0.319,32,0.152,33,0.016,74,1.494,103,1.843,294,1.509,297,0.01,298,0.01,325,0.924,359,1.789,409,0.603,413,1.752,414,1,415,3.016,421,1.365,422,0.56,423,4.019,498,0.906,506,3.514,540,4.353,545,1.118,546,2.352,547,2.352,548,2.352,549,2.352,550,2.352,551,2.352,552,3.328,553,2.352,554,2.352,555,2.352,556,2.352,557,2.352,558,2.352,559,2.352,560,2.352,561,2.352,562,2.352,563,2.352,564,2.352,565,2.728,566,2.728,567,2.441,568,4.758,569,2.728,572,2.754,574,2.728,575,2.211,576,1.843,577,2.837,578,1.843,581,4.492,582,4.594,583,1.843,586,1.843,587,1.843,590,2.728,592,1.843,594,1.276,595,1.843,596,2.104,599,1.843,603,1.276,604,1.843,606,1.843,607,1.843,609,2.728,610,1.843,612,3.248,613,2.728,614,1.276,615,1.843,617,1.843,621,1.843,623,1.843,626,1.843,628,1.118,629,2.683,630,1.276,631,5.091,632,0.906,633,1.276,634,1.118,635,1.276,636,1.118,637,1.118,660,2.683,701,1.276,713,1.494,755,5.091,756,5.842,757,1.515,758,1.515,759,1.515,760,1.515,761,1.515,762,1.515,763,1.515,764,2.498,765,1.515,766,5.193,767,1.515,768,1.515,769,1.515,770,1.515,771,1.515,772,1.515,773,1.515,774,1.515,775,1.515,776,1.515,777,1.515,778,1.515,779,1.515,780,1.515,781,1.515,782,1.515,783,1.515,784,1.515,785,1.515,786,6.002,787,2.498,788,6.002]],["title/classes/User.html",[33,0.013,789,1.822]],["body/classes/User.html",[3,0.355,4,0.316,9,0.316,19,0.482,20,1.751,22,1.139,23,0.028,24,1.592,25,1.939,28,1.234,30,0.355,32,0.355,33,0.014,110,4.446,297,0.019,298,0.019,325,1.97,331,1.939,359,1.926,409,1.412,411,3.517,413,2.262,491,3.125,503,2.988,512,3.931,521,3.493,533,3.493,572,2.911,641,4.486,642,4.486,643,4.486,644,4.486,645,4.486,646,4.486,647,4.486,789,2.587,790,2.988,791,3.549,792,3.549,793,3.549,794,3.549,795,3.549,796,3.549,797,3.549,798,3.549,799,3.549,800,3.549]],["title/controllers/UsersController.html",[354,1.233,801,2.201]],["body/controllers/UsersController.html",[3,0.314,4,0.279,9,0.279,19,0.426,22,1.061,23,0.028,24,1.408,28,1.031,30,0.567,32,0.314,33,0.013,263,2.184,294,1.386,297,0.018,298,0.018,303,1.731,304,2.501,306,2.949,307,2.184,308,2.602,313,2.143,314,2.143,320,2.148,321,3.67,323,1.573,325,1.996,326,1.874,328,0.752,337,1.247,348,1.996,354,1.159,356,1.078,359,1.609,363,1.874,415,2.844,422,1.159,427,2.069,431,2.312,433,3.21,434,3.21,436,2.639,437,4.331,438,3.983,439,3.983,441,2.069,442,2.312,443,2.872,444,3.21,445,3.21,446,4.185,447,2.069,450,1.712,455,2.312,456,3.983,457,2.069,459,2.312,460,2.312,478,2.639,509,2.069,638,3.51,710,2.639,717,2.639,729,2.639,789,3.098,801,2.872,802,2.639,803,3.134,804,2.639,805,3.134,806,3.134,807,3.134,808,3.134,809,3.134,810,4.351,811,4.351,812,3.134,813,2.639,814,2.312,815,2.73,816,2.639,817,3.134,818,3.134,819,3.134,820,3.134,821,3.134,822,3.134]],["title/modules/UsersModule.html",[365,1.068,390,1.822]],["body/modules/UsersModule.html",[3,0.445,4,0.396,9,0.396,23,0.028,30,0.635,32,0.445,33,0.018,135,1.906,297,0.022,298,0.022,328,1.066,330,2.428,356,1.882,365,1.752,367,1.529,368,2.346,374,2.746,375,2.232,377,2.989,378,2.428,381,2.658,390,3.532,789,2.428,801,3.912,814,3.28,815,3.532,816,3.742,823,3.742,824,3.742,825,4.445,826,4.445,827,4.445]],["title/injectables/UsersService.html",[299,1.233,815,1.822]],["body/injectables/UsersService.html",[3,0.336,4,0.299,9,0.299,19,0.456,22,0.98,23,0.028,24,1.438,28,1.11,30,0.582,32,0.336,33,0.013,263,1.687,294,1.542,297,0.019,298,0.019,299,1.687,301,1.835,303,1.816,304,2.114,305,4.423,306,3.037,307,2.291,308,2.729,309,3.842,311,4.68,313,2.384,314,2.384,320,2.212,321,3.731,323,2.291,325,1.687,326,2.729,328,0.806,329,2.828,330,1.835,331,1.835,336,2.479,337,1.337,338,2.009,348,1.916,352,2.828,450,1.835,638,3.476,789,2.831,804,3.842,813,2.828,814,2.479,815,2.493,828,2.828,829,3.359,830,3.359,831,4.563,832,3.359,833,3.359,834,3.359,835,3.359,836,3.359,837,3.359,838,3.359,839,3.359,840,3.359,841,3.359,842,3.359,843,3.359,844,3.359,845,3.359,846,3.359,847,3.359,848,3.359,849,3.359,850,3.359,851,3.359,852,3.359,853,3.359,854,3.359,855,3.359,856,3.359,857,3.359,858,3.359]],["title/coverage.html",[859,3.35]],["body/coverage.html",[0,2.168,1,2.168,9,0.292,10,2.766,22,0.579,23,0.028,33,0.025,70,5.044,257,2.424,263,1.649,297,0.018,298,0.018,299,2.133,300,1.795,302,2.766,317,1.965,333,1.795,354,2.133,355,2.168,357,2.766,361,1.795,367,1.13,376,3.316,381,1.965,386,2.424,405,2.766,408,1.965,410,2.766,425,2.168,426,2.766,430,1.965,448,1.795,466,2.766,473,2.168,474,2.766,486,2.766,499,2.766,536,2.766,537,2.766,543,1.965,544,2.766,545,3.316,577,1.795,638,1.965,639,2.424,640,2.424,659,2.766,702,2.168,703,2.766,713,1.965,718,1.795,735,2.766,755,2.766,789,1.795,790,2.766,801,2.168,802,2.766,815,1.795,828,2.766,859,2.424,860,3.285,861,3.285,862,2.766,863,6.207,864,2.766,865,6.369,866,5.122,867,2.766,868,3.784,869,2.766,870,3.784,871,2.766,872,2.766,873,4.494,874,4.494,875,3.285,876,5.122,877,2.766,878,4.494,879,2.766,880,3.285,881,3.285,882,3.285,883,3.285,884,2.766,885,2.766,886,4.494,887,3.285,888,3.285,889,3.285,890,3.285,891,2.766,892,3.285,893,3.285]],["title/dependencies.html",[368,1.719,894,2.79]],["body/dependencies.html",[11,3.847,23,0.028,33,0.022,41,3.371,297,0.023,298,0.023,328,1.096,330,2.496,331,2.496,368,1.96,380,3.371,422,1.69,498,2.732,895,5.998,896,4.569,897,4.569,898,4.569,899,4.684,900,4.569,901,4.569,902,4.569,903,4.569,904,4.569,905,4.569,906,4.569,907,4.569,908,3.847,909,4.569,910,4.569,911,4.569,912,4.569,913,4.569,914,4.569,915,4.569,916,4.569,917,4.569,918,4.569]],["title/miscellaneous/enumerations.html",[919,1.524,920,3.374]],["body/miscellaneous/enumerations.html",[19,0.615,23,0.028,26,4.441,297,0.023,298,0.023,552,3.654,572,3.024,575,3.722,632,3.722,639,3.343,640,4.084,657,4.66,658,4.66,919,2.475,920,3.815,921,5.535,922,4.531,923,4.531,924,5.535,925,5.535,926,5.535,927,5.535,928,5.535]],["title/miscellaneous/functions.html",[919,1.524,929,3.374]],["body/miscellaneous/functions.html",[13,3.725,19,0.686,22,0.89,23,0.026,294,1.401,297,0.024,298,0.024,313,2.165,314,2.165,877,4.25,879,5.269,884,4.25,885,4.971,919,2.758,929,4.25,930,5.048,931,5.048,932,5.048]],["title/index.html",[19,0.379,253,2.059,933,2.349]],["body/index.html",[4,0.369,13,3.056,23,0.028,94,3.487,250,3.487,266,3.056,268,5.348,269,3.487,270,4.407,272,3.056,279,4.407,297,0.021,298,0.021,415,1.919,859,3.056,934,4.141,935,4.141,936,4.141,937,4.141,938,4.141,939,4.141,940,4.141,941,4.141,942,4.141,943,4.141,944,4.141,945,4.141,946,4.141,947,6.45,948,4.141,949,4.141,950,4.141,951,5.234,952,4.141,953,4.141,954,4.141,955,4.141,956,4.141,957,4.141,958,5.234,959,4.407,960,5.234,961,4.141,962,4.141,963,4.141,964,4.141,965,4.141,966,4.141,967,4.141,968,4.141,969,4.141,970,4.141,971,4.141,972,4.141,973,4.141,974,4.141,975,4.141,976,4.141,977,4.141,978,4.141,979,4.141,980,4.141,981,3.056]],["title/license.html",[253,2.059,933,2.349,981,2.059]],["body/license.html",[23,0.021,135,1.767,257,3.04,297,0.021,298,0.021,567,2.72,744,3.469,899,3.469,959,3.469,981,3.04,982,5.726,983,4.12,984,4.12,985,5.217,986,4.12,987,4.12,988,4.12,989,4.12,990,4.12,991,4.12,992,5.217,993,6.58,994,4.12,995,4.12,996,4.12,997,5.726,998,4.12,999,5.217,1000,4.12,1001,4.12,1002,5.217,1003,4.12,1004,4.12,1005,4.12,1006,4.12,1007,4.12,1008,4.12,1009,4.12,1010,5.217,1011,4.12,1012,4.12,1013,4.12,1014,4.12,1015,4.12,1016,4.12,1017,4.12,1018,5.217,1019,5.217,1020,4.12,1021,4.12,1022,4.12,1023,4.12,1024,4.12,1025,4.12,1026,4.12,1027,4.12,1028,4.12,1029,4.12,1030,4.12,1031,4.12,1032,4.12,1033,4.12,1034,4.12,1035,4.12,1036,4.12,1037,4.12,1038,4.12,1039,4.12,1040,4.12,1041,4.12,1042,4.12,1043,4.12,1044,4.12,1045,4.12,1046,4.12,1047,4.12]],["title/modules.html",[367,1.562]],["body/modules.html",[23,0.023,266,4.897,297,0.023,298,0.023,366,3.755,367,1.631,372,2.59,373,2.59,384,2.835,390,2.59,391,2.38,396,3.129,1048,6.637,1049,6.637,1050,6.693,1051,4.741,1052,4.741]],["title/overview.html",[1053,3.822]],["body/overview.html",[0,2.647,1,4.227,23,0.028,70,2.958,74,2.398,135,1.72,297,0.021,298,0.021,300,3.088,301,2.19,356,1.379,361,3.088,366,4.43,367,1.379,368,2.199,369,3.376,370,3.376,371,3.376,372,3.364,373,3.364,374,2.574,375,2.013,384,3.563,390,3.255,391,3.092,396,3.732,409,1.595,448,3.088,462,3.376,463,3.376,523,3.376,524,3.376,680,4.317,718,3.088,731,3.376,732,3.376,815,3.088,823,3.376,824,3.376,1053,3.376,1054,4.009,1055,4.009,1056,4.009,1057,4.009]],["title/routes.html",[401,3.35]],["body/routes.html",[23,0.025,297,0.025,298,0.025,401,3.944]],["title/miscellaneous/variables.html",[919,1.524,1058,3.374]],["body/miscellaneous/variables.html",[19,0.465,22,1.086,23,0.028,24,0.821,25,3.366,26,4.068,34,2.882,41,2.525,272,3.409,297,0.019,298,0.019,348,1.266,367,1.59,372,1.87,373,2.524,376,2.525,378,1.87,379,4.133,381,2.763,386,3.409,390,2.524,391,1.718,392,2.882,393,2.882,394,2.882,395,2.882,504,3.86,533,4.624,862,2.882,864,3.891,867,2.882,868,4.716,869,2.882,870,2.882,871,4.925,872,3.891,891,2.882,908,2.882,919,1.87,1058,2.882,1059,4.621,1060,3.422,1061,3.422,1062,3.422,1063,4.621,1064,3.422,1065,3.422,1066,3.422,1067,3.422,1068,3.422,1069,3.422,1070,3.422,1071,3.422,1072,3.422,1073,3.422,1074,3.422,1075,3.422,1076,3.422,1077,3.422,1078,3.422,1079,3.422,1080,4.621,1081,3.422,1082,3.422,1083,5.231,1084,3.422,1085,5.231,1086,5.231,1087,4.621,1088,4.621,1089,4.621,1090,3.422,1091,3.422,1092,3.422,1093,3.422,1094,3.422]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1.13",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["0.13.1",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.40",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["0.24",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["0.25rem",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["0.35",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["0.4.0",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"classes/Cat.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"overview.html":{}}}],["1.1.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"classes/Student.html":{}}}],["103",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["12",{"_index":566,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["120px",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["125699",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["12px",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["14px",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["15",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["160px",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["168px",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["16px",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["17px",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["180deg,#f0f3f6,#e6ebf1",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["180deg,#fafbfc,#eff3f6",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["180px",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["1920px",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["1976d2",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["1s",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":685,"title":{},"body":{"classes/Student.html":{}}}],["2.18.1",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":565,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["200",{"_index":437,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["200px",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["2021",{"_index":567,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"license.html":{}}}],["2022",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["230px",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["24292e",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["24px",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["2rem",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.2",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["32px",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["333",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["4.1.6",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":433,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["40px",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["45px",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["4px",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":680,"title":{},"body":{"classes/Student.html":{},"overview.html":{}}}],["5.1.5",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["575px",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["58",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["5deg",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["5em",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["600",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["600px",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["60px",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["6px",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["7.2.0",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["72px",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["767px",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":1056,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["80px",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["82px",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["888",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["8px",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":1057,"title":{},"body":{"overview.html":{}}}],["90",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["95px",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["960px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["_____",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["a:hover",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["a:visited",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["above",{"_index":1017,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["action",{"_index":744,"title":{},"body":{"injectables/StudentsService.html":{},"license.html":{}}}],["actual_component",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["adds",{"_index":745,"title":{},"body":{"injectables/StudentsService.html":{}}}],["adhaar",{"_index":583,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["admin",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admission",{"_index":569,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["admissiondate",{"_index":546,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["admissionnid",{"_index":660,"title":{},"body":{"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["age",{"_index":411,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["align",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["amazing",{"_index":966,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1008,"title":{},"body":{"license.html":{}}}],["angular",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["angular/material",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/pwa",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/router",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["angular?&nbsp",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["antialiased",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v2",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":444,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":445,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":421,"title":{},"body":{"classes/Cat.html":{},"classes/ConfigDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["apiproperty({enum",{"_index":573,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{}}}],["apiproperty({example",{"_index":414,"title":{},"body":{"classes/Cat.html":{},"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["apiproperty({type",{"_index":619,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{}}}],["apipropertyoptional",{"_index":786,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["apipropertyoptional({enum",{"_index":761,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["apipropertyoptional({example",{"_index":756,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["apipropertyoptional({type",{"_index":781,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["apiresponse",{"_index":446,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":447,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["apitags('cats",{"_index":453,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags('configs",{"_index":481,"title":{},"body":{"controllers/ConfigController.html":{}}}],["apitags('students",{"_index":722,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apitags('users",{"_index":817,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.controller",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":362,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice",{"_index":300,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"coverage.html":{},"overview.html":{}}}],["appcontroller",{"_index":355,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apple",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["applications",{"_index":942,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":366,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":396,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":361,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arial",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["arising",{"_index":1045,"title":{},"body":{"license.html":{}}}],["array",{"_index":747,"title":{},"body":{"injectables/StudentsService.html":{}}}],["associated",{"_index":994,"title":{},"body":{"license.html":{}}}],["async",{"_index":305,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":975,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1035,"title":{},"body":{"license.html":{}}}],["auto",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["autoloadentities",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1052,"title":{},"body":{"modules.html":{}}}],["await",{"_index":352,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":967,"title":{},"body":{"index.html":{}}}],["background",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["badge",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["badge:hover",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["bc",{"_index":926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bcm",{"_index":928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birth",{"_index":634,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["birth'})@column({type",{"_index":687,"title":{},"body":{"classes/Student.html":{}}}],["birth'})@isdate()@isnotempty",{"_index":602,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["birth'})@isdate()@isnotempty()@isoptional",{"_index":775,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["blinkmacsystemfont",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["blog",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["blood",{"_index":586,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["body",{"_index":441,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":491,"title":{},"body":{"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["breed",{"_index":412,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["browse",{"_index":1050,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1048,"title":{},"body":{"modules.html":{}}}],["build",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["building",{"_index":937,"title":{},"body":{"index.html":{}}}],["built",{"_index":943,"title":{},"body":{"index.html":{}}}],["c",{"_index":983,"title":{},"body":{"license.html":{}}}],["c2c3c4",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["calc(100vh",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["calendarfeature",{"_index":487,"title":{},"body":{"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{}}}],["call",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["card):hover",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["card.card",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["card.card.highlight",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["card.highlight",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["card:not(.highlight",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["card:not(:last",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["caste",{"_index":590,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["cat",{"_index":408,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat'})@apiresponse({status",{"_index":432,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto",{"_index":451,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cat.dto.ts",{"_index":537,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":541,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:5",{"_index":542,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:8",{"_index":539,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cats",{"_index":428,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":465,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":449,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["catscontroller",{"_index":425,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":384,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":448,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["center",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["changeorigin",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["char",{"_index":679,"title":{},"body":{"classes/Student.html":{}}}],["charge",{"_index":989,"title":{},"body":{"license.html":{}}}],["child",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["circle",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["claim",{"_index":1038,"title":{},"body":{"license.html":{}}}],["class",{"_index":33,"title":{"classes/Cat.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class'})@column({type",{"_index":678,"title":{},"body":{"classes/Student.html":{}}}],["class'})@isstring()@isnotempty",{"_index":593,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["class'})@isstring()@isnotempty()@isoptional",{"_index":769,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["classes",{"_index":409,"title":{},"body":{"classes/Cat.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["client/.../environment.prod.ts",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client/.../environment.ts",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client/.../proxy.config.ts",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client/.../test.ts",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client/proxy.config.ts",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client/src/app/app",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["client/src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["client/src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["client/src/environments/environment.prod.ts",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client/src/environments/environment.ts",{"_index":869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client/src/test.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["clouds",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1055,"title":{},"body":{"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":1054,"title":{},"body":{"overview.html":{}}}],["cluster_appmodule_imports",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":462,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":463,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":523,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_providers",{"_index":524,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_studentsmodule",{"_index":731,"title":{},"body":{"modules/StudentsModule.html":{},"overview.html":{}}}],["cluster_studentsmodule_providers",{"_index":732,"title":{},"body":{"modules/StudentsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":823,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":824,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["color",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigEntity.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["column({default",{"_index":503,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/User.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{}}}],["conditions",{"_index":1016,"title":{},"body":{"license.html":{}}}],["config",{"_index":339,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"modules/CoreModule.html":{}}}],["config.calendarfeature",{"_index":344,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.controller",{"_index":526,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.default",{"_index":535,"title":{},"body":{"modules/CoreModule.html":{}}}],["config.emailfeature",{"_index":340,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.smsfeature",{"_index":342,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.voicecallfeature",{"_index":346,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configcontroller",{"_index":473,"title":{"controllers/ConfigController.html":{}},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["configdto",{"_index":317,"title":{"classes/ConfigDto.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"coverage.html":{}}}],["configentity",{"_index":333,"title":{"classes/ConfigEntity.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["configmodule",{"_index":391,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":531,"title":{},"body":{"modules/CoreModule.html":{}}}],["configrepository",{"_index":315,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configservice",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"controllers/ConfigController.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_host",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_name",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_port",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_password",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_user_name",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":483,"title":{},"body":{"controllers/ConfigController.html":{},"modules/CoreModule.html":{}}}],["configuration'})@apiresponse({status",{"_index":476,"title":{},"body":{"controllers/ConfigController.html":{}}}],["configurationdto",{"_index":319,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configurationdto.calendarfeature",{"_index":345,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configurationdto.emailfeature",{"_index":341,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configurationdto.smsfeature",{"_index":343,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configurationdto.voicecallfeature",{"_index":347,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["connection",{"_index":1046,"title":{},"body":{"license.html":{}}}],["const",{"_index":338,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/StudentsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":309,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/UsersService.html":{}}}],["constructor(configrepository",{"_index":310,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(private",{"_index":363,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":829,"title":{},"body":{"injectables/UsersService.html":{}}}],["container",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1042,"title":{},"body":{"license.html":{}}}],["controller",{"_index":354,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":454,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('config",{"_index":482,"title":{},"body":{"controllers/ConfigController.html":{}}}],["controller('students",{"_index":723,"title":{},"body":{"controllers/StudentsController.html":{}}}],["controller('users",{"_index":818,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":356,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coon",{"_index":418,"title":{},"body":{"classes/Cat.html":{}}}],["copies",{"_index":1010,"title":{},"body":{"license.html":{}}}],["copy",{"_index":992,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":982,"title":{},"body":{"license.html":{}}}],["core/core.module",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":372,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":859,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":304,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":457,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["create(cat",{"_index":467,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(configdto",{"_index":475,"title":{},"body":{"controllers/ConfigController.html":{}}}],["create(configurationdto",{"_index":316,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["create(createcatdto",{"_index":429,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createstudentdto",{"_index":706,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{}}}],["create(createuserdto",{"_index":804,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcatdto",{"_index":430,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["created_at",{"_index":501,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["createdat",{"_index":661,"title":{},"body":{"classes/Student.html":{}}}],["createdatecolumn",{"_index":520,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["createdatecolumn({type",{"_index":507,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["createstudentdto",{"_index":543,"title":{"classes/CreateStudentDto.html":{}},"body":{"classes/CreateStudentDto.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"coverage.html":{}}}],["createswaggerapi",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswaggerapi(app",{"_index":932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserdto",{"_index":638,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.age",{"_index":842,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.firstname",{"_index":838,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.gender",{"_index":844,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.isactive",{"_index":854,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":840,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.primaryemailid",{"_index":848,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.primarymobilenumber",{"_index":846,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.secondaryemailid",{"_index":852,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.secondarymobilenumber",{"_index":850,"title":{},"body":{"injectables/UsersService.html":{}}}],["current",{"_index":592,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["current_timestamp(6",{"_index":517,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["cursor",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["damages",{"_index":1039,"title":{},"body":{"license.html":{}}}],["database",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":506,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["date'})@column({type",{"_index":663,"title":{},"body":{"classes/Student.html":{}}}],["date'})@isdate()@isnotempty",{"_index":570,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["date'})@isdate()@isnotempty()@isoptional",{"_index":757,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["dbconfig",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["dbconfig(configservice",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dbconfigsetup",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":996,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1047,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoration",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["decorators",{"_index":359,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/CatsService.html":{},"classes/ConfigEntity.html":{},"classes/Student.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":717,"title":{},"body":{"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":710,"title":{},"body":{"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@apiresponse({status",{"_index":809,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":810,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":368,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["describe",{"_index":576,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["describes",{"_index":568,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["description",{"_index":415,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["development",{"_index":949,"title":{},"body":{"index.html":{}}}],["devi",{"_index":617,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["devtools",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["discord",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["discount",{"_index":599,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["display",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["distribute",{"_index":1006,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["dto/config.dto",{"_index":332,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{}}}],["dto/create",{"_index":450,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":721,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{}}}],["e2e",{"_index":955,"title":{},"body":{"index.html":{}}}],["ease",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["eee",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["eeeeee",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["efficient",{"_index":938,"title":{},"body":{"index.html":{}}}],["element",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["emailfeature",{"_index":488,"title":{},"body":{"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{}}}],["emi's",{"_index":604,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["emoji",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["entities/cat.entity",{"_index":452,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["entities/config.entity",{"_index":334,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["entity",{"_index":521,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["enum",{"_index":596,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["enumerations",{"_index":920,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":574,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["environment",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":1034,"title":{},"body":{"license.html":{}}}],["example",{"_index":423,"title":{},"body":{"classes/Cat.html":{},"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["express",{"_index":899,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["fafafa",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":504,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["father",{"_index":607,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["female",{"_index":632,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"miscellaneous/enumerations.html":{}}}],["female'})@column({type",{"_index":669,"title":{},"body":{"classes/Student.html":{}}}],["female'})@isstring()@isnotempty()@isenum(gender",{"_index":579,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["female'})@isstring()@isnotempty()@isoptional()@isenum(gender",{"_index":762,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":995,"title":{},"body":{"license.html":{}}}],["fill",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["findall",{"_index":306,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":307,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":460,"title":{},"body":{"controllers/CatsController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":323,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonlyrequestedid",{"_index":736,"title":{},"body":{"injectables/StudentsService.html":{}}}],["findonlyrequestedid(id",{"_index":740,"title":{},"body":{"injectables/StudentsService.html":{}}}],["first",{"_index":610,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["firstname",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["fitness",{"_index":1030,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["following",{"_index":1015,"title":{},"body":{"license.html":{}}}],["font",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["footer",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["forbidden",{"_index":434,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["found",{"_index":438,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["framework",{"_index":936,"title":{},"body":{"index.html":{}}}],["free",{"_index":988,"title":{},"body":{"license.html":{}}}],["function",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":929,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1013,"title":{},"body":{"license.html":{}}}],["gender",{"_index":572,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["generate",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["get(':id",{"_index":459,"title":{},"body":{"controllers/CatsController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apiresponse({status",{"_index":436,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["get()@apiresponse({status",{"_index":478,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":358,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getids",{"_index":746,"title":{},"body":{"injectables/StudentsService.html":{}}}],["getids.length",{"_index":749,"title":{},"body":{"injectables/StudentsService.html":{}}}],["getids.map((i",{"_index":750,"title":{},"body":{"injectables/StudentsService.html":{}}}],["getting",{"_index":933,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["give",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["gradient",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["granted",{"_index":987,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1051,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["grayscale",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":587,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["grow",{"_index":963,"title":{},"body":{"index.html":{}}}],["h1",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["h2",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["h3",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["h4",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["h5",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["h6",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["heelo",{"_index":407,"title":{},"body":{"injectables/AppService.html":{}}}],["height",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["helvetica",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["here",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hereby",{"_index":986,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["holders",{"_index":1036,"title":{},"body":{"license.html":{}}}],["host",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["http://localhost:4200",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://somethingelse.com",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://example.com",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":979,"title":{},"body":{"index.html":{}}}],["icons",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["icons:not(:last",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":325,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ConfigEntity.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id.split",{"_index":748,"title":{},"body":{"injectables/StudentsService.html":{}}}],["identifier",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["img",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["implied",{"_index":1026,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["included",{"_index":1020,"title":{},"body":{"license.html":{}}}],["including",{"_index":999,"title":{},"body":{"license.html":{}}}],["incremented",{"_index":701,"title":{},"body":{"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["incremented'})@isnumber()@isnotempty",{"_index":759,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["incremented'})@primarygeneratedcolumn",{"_index":666,"title":{},"body":{"classes/Student.html":{}}}],["indent",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":299,"title":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/StudentsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/StudentsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":301,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/StudentsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":329,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(configentity",{"_index":335,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["injectrepository(user",{"_index":836,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":946,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":948,"title":{},"body":{"index.html":{}}}],["isactive",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["isboolean",{"_index":497,"title":{},"body":{"classes/ConfigDto.html":{}}}],["isboolean()@apiproperty",{"_index":492,"title":{},"body":{"classes/ConfigDto.html":{}}}],["isdate",{"_index":629,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["isenum",{"_index":630,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["isenum(gender",{"_index":633,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["isenum(studentcommunity",{"_index":635,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["isglobal",{"_index":532,"title":{},"body":{"modules/CoreModule.html":{}}}],["isint",{"_index":538,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isnotempty",{"_index":631,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["isnumber",{"_index":787,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["isoptional",{"_index":788,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["isstring",{"_index":540,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["items",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["join",{"_index":969,"title":{},"body":{"index.html":{}}}],["justify",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["kamil",{"_index":976,"title":{},"body":{"index.html":{}}}],["key",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1025,"title":{},"body":{"license.html":{}}}],["kitty",{"_index":424,"title":{},"body":{"classes/Cat.html":{}}}],["last",{"_index":615,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["lastname",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["learn",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["length",{"_index":673,"title":{},"body":{"classes/Student.html":{}}}],["liability",{"_index":1040,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1037,"title":{},"body":{"license.html":{}}}],["license",{"_index":981,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":960,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1000,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1027,"title":{},"body":{"license.html":{}}}],["line",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["linear",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["link:hover",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["links",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":534,"title":{},"body":{"modules/CoreModule.html":{}}}],["loglevel",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logo",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["logo:hover",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["love",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["maine",{"_index":417,"title":{},"body":{"classes/Cat.html":{}}}],["male",{"_index":575,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"miscellaneous/enumerations.html":{}}}],["margin",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["max",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["mbc",{"_index":925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["meetup",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["merchantability",{"_index":1029,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1004,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["methods",{"_index":303,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":919,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":959,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":951,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1003,"title":{},"body":{"license.html":{}}}],["module",{"_index":365,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":367,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mono,menlo,monospace",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["more",{"_index":972,"title":{},"body":{"index.html":{}}}],["mother",{"_index":612,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["moz",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["mysql",{"_index":908,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":977,"title":{},"body":{"index.html":{}}}],["name",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@column({type",{"_index":675,"title":{},"body":{"classes/Student.html":{}}}],["name'})@isstring()@isnotempty",{"_index":588,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["name'})@isstring()@isnotempty()@isoptional",{"_index":766,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["nationality",{"_index":621,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["nest",{"_index":958,"title":{},"body":{"index.html":{}}}],["nest,typeorm,swagger,compodoc",{"_index":945,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":980,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":328,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":422,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"classes/UpdateStudentDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":330,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/ConfigController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["ng",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["node.js",{"_index":935,"title":{},"body":{"index.html":{}}}],["none",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["noninfringement",{"_index":1033,"title":{},"body":{"license.html":{}}}],["not(.circle",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["notice",{"_index":1018,"title":{},"body":{"license.html":{}}}],["npm",{"_index":947,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":664,"title":{},"body":{"classes/Student.html":{}}}],["number",{"_index":413,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{}}}],["number'})@column({type",{"_index":671,"title":{},"body":{"classes/Student.html":{}}}],["number'})@isstring()@isnotempty",{"_index":584,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["number'})@isstring()@isnotempty()@isoptional",{"_index":764,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["number(getids",{"_index":752,"title":{},"body":{"injectables/StudentsService.html":{}}}],["number(i",{"_index":751,"title":{},"body":{"injectables/StudentsService.html":{}}}],["object",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":991,"title":{},"body":{"license.html":{}}}],["oc",{"_index":927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":516,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["opacity",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":961,"title":{},"body":{"index.html":{}}}],["optional",{"_index":314,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["osx",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["others",{"_index":657,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["otherwise",{"_index":1044,"title":{},"body":{"license.html":{}}}],["out",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1053,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":894,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":442,"title":{},"body":{"controllers/CatsController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":727,"title":{},"body":{"controllers/StudentsController.html":{}}}],["parameters",{"_index":313,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1031,"title":{},"body":{"license.html":{}}}],["password",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":716,"title":{},"body":{"controllers/StudentsController.html":{}}}],["patch(':id",{"_index":714,"title":{},"body":{"controllers/StudentsController.html":{}}}],["path",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["percentage",{"_index":637,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["percentage'})@column({type",{"_index":684,"title":{},"body":{"classes/Student.html":{}}}],["percentage'})@isstring()@isnotempty",{"_index":600,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["percentage'})@isstring()@isnotempty()@isoptional",{"_index":773,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["permission",{"_index":985,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1011,"title":{},"body":{"license.html":{}}}],["person",{"_index":990,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1012,"title":{},"body":{"license.html":{}}}],["please",{"_index":970,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["port",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1022,"title":{},"body":{"license.html":{}}}],["position",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":443,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["post()@apioperation({summary",{"_index":431,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["pre",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["prefix",{"_index":427,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["previous",{"_index":623,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["primaryemailid",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["primarygeneratedcolumn",{"_index":512,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["primarymobilenumber",{"_index":645,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["private",{"_index":336,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":934,"title":{},"body":{"index.html":{}}}],["project",{"_index":962,"title":{},"body":{"index.html":{}}}],["promise",{"_index":321,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{}}}],["provided",{"_index":1023,"title":{},"body":{"license.html":{}}}],["providers",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{}}}],["proxyconfig",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":500,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["publish",{"_index":1005,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1032,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ram",{"_index":609,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["ranga",{"_index":606,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["read",{"_index":971,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":337,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/CreateCatDto.html":{},"controllers/StudentsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":439,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["regular,consolas,liberation",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["religion",{"_index":626,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["remove",{"_index":308,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":729,"title":{},"body":{"controllers/StudentsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":326,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":754,"title":{},"body":{"injectables/StudentsService.html":{}}}],["repo",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["repository",{"_index":311,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/UsersService.html":{}}}],["require",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["resources/students/students.module",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["responsive",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["rest",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restriction",{"_index":998,"title":{},"body":{"license.html":{}}}],["results",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":348,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":320,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rgb(105",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["rgb(15",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["rgb(58",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(27,31,35,.2",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(27,31,35,.35",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":1001,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["roboto",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["rocket",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["role",{"_index":547,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["rotate",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":401,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module.ts",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["running",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["sans",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["sc/st",{"_index":924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scalable",{"_index":939,"title":{},"body":{"index.html":{}}}],["school",{"_index":636,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["school'})@column({type",{"_index":697,"title":{},"body":{"classes/Student.html":{}}}],["school'})@isstring()@isnotempty",{"_index":624,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["school'})@isstring()@isnotempty()@isoptional",{"_index":784,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["screen",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["secondaryemailid",{"_index":646,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["secondarymobilenumber",{"_index":647,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["secure",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segoe",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":1009,"title":{},"body":{"license.html":{}}}],["serif",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":940,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":480,"title":{},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["sfmono",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["shall",{"_index":1019,"title":{},"body":{"license.html":{}}}],["shared/enum",{"_index":628,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["ship",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":941,"title":{},"body":{"index.html":{}}}],["size",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["sizing",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["smoke",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["smoothing",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["smsfeature",{"_index":489,"title":{},"body":{"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{}}}],["software",{"_index":993,"title":{},"body":{"license.html":{}}}],["solid",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spacer",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["span",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["spec\\.ts",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":965,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enum.ts",{"_index":921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sharedbcofig.factory.ts",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swaggerapi.ts",{"_index":931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":357,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":360,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":405,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":406,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/config.controller.ts",{"_index":474,"title":{},"body":{"controllers/ConfigController.html":{},"coverage.html":{}}}],["src/config/config.controller.ts:21",{"_index":477,"title":{},"body":{"controllers/ConfigController.html":{}}}],["src/config/config.controller.ts:31",{"_index":479,"title":{},"body":{"controllers/ConfigController.html":{}}}],["src/config/config.module.ts",{"_index":525,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/dto/config.dto.ts",{"_index":486,"title":{},"body":{"classes/ConfigDto.html":{},"coverage.html":{}}}],["src/config/dto/config.dto.ts:10",{"_index":494,"title":{},"body":{"classes/ConfigDto.html":{}}}],["src/config/dto/config.dto.ts:14",{"_index":493,"title":{},"body":{"classes/ConfigDto.html":{}}}],["src/config/dto/config.dto.ts:18",{"_index":496,"title":{},"body":{"classes/ConfigDto.html":{}}}],["src/config/dto/config.dto.ts:6",{"_index":495,"title":{},"body":{"classes/ConfigDto.html":{}}}],["src/config/entities/config.entity.ts",{"_index":499,"title":{},"body":{"classes/ConfigEntity.html":{},"coverage.html":{}}}],["src/config/entities/config.entity.ts:12",{"_index":513,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/entities/config.entity.ts:15",{"_index":514,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/entities/config.entity.ts:18",{"_index":511,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/entities/config.entity.ts:21",{"_index":505,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/entities/config.entity.ts:24",{"_index":519,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/entities/config.entity.ts:30",{"_index":510,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/entities/config.entity.ts:37",{"_index":518,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["src/config/services/config.service.ts",{"_index":302,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/config/services/config.service.ts:14",{"_index":318,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/services/config.service.ts:25",{"_index":322,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/services/config.service.ts:29",{"_index":324,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/services/config.service.ts:33",{"_index":327,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/services/config.service.ts:8",{"_index":312,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/core/core.module.ts",{"_index":530,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/main.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/resources/students/dto/create",{"_index":544,"title":{},"body":{"classes/CreateStudentDto.html":{},"coverage.html":{}}}],["src/resources/students/dto/update",{"_index":755,"title":{},"body":{"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["src/resources/students/entities/student.entity.ts",{"_index":659,"title":{},"body":{"classes/Student.html":{},"coverage.html":{}}}],["src/resources/students/entities/student.entity.ts:105",{"_index":670,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:116",{"_index":688,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:128",{"_index":677,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:141",{"_index":683,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:153",{"_index":699,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:165",{"_index":696,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:177",{"_index":695,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:189",{"_index":692,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:20",{"_index":667,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:201",{"_index":676,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:213",{"_index":674,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:225",{"_index":689,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:237",{"_index":698,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:249",{"_index":686,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:255",{"_index":668,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:262",{"_index":700,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:31",{"_index":665,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:43",{"_index":691,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:55",{"_index":693,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:67",{"_index":681,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:79",{"_index":690,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/entities/student.entity.ts:91",{"_index":694,"title":{},"body":{"classes/Student.html":{}}}],["src/resources/students/students.controller.ts",{"_index":703,"title":{},"body":{"controllers/StudentsController.html":{},"coverage.html":{}}}],["src/resources/students/students.controller.ts:21",{"_index":707,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/resources/students/students.controller.ts:26",{"_index":708,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/resources/students/students.controller.ts:31",{"_index":709,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/resources/students/students.controller.ts:36",{"_index":715,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/resources/students/students.controller.ts:44",{"_index":711,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/resources/students/students.module.ts",{"_index":733,"title":{},"body":{"modules/StudentsModule.html":{}}}],["src/resources/students/students.service.ts",{"_index":735,"title":{},"body":{"injectables/StudentsService.html":{},"coverage.html":{}}}],["src/resources/students/students.service.ts:11",{"_index":738,"title":{},"body":{"injectables/StudentsService.html":{}}}],["src/resources/students/students.service.ts:15",{"_index":741,"title":{},"body":{"injectables/StudentsService.html":{}}}],["src/resources/students/students.service.ts:24",{"_index":739,"title":{},"body":{"injectables/StudentsService.html":{}}}],["src/resources/students/students.service.ts:28",{"_index":743,"title":{},"body":{"injectables/StudentsService.html":{}}}],["src/resources/students/students.service.ts:32",{"_index":742,"title":{},"body":{"injectables/StudentsService.html":{}}}],["src/resources/students/students.service.ts:7",{"_index":737,"title":{},"body":{"injectables/StudentsService.html":{}}}],["src/shared/enum.ts",{"_index":923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/swaggerapi.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger_example/cats.controller.ts",{"_index":426,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/swagger_example/cats.controller.ts:21",{"_index":435,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/swagger_example/cats.controller.ts:31",{"_index":440,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/swagger_example/cats.module.ts",{"_index":464,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/swagger_example/cats.service.ts",{"_index":466,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/swagger_example/cats.service.ts:14",{"_index":469,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/swagger_example/cats.service.ts:7",{"_index":470,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/swagger_example/cats.service.ts:9",{"_index":468,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/swagger_example/dto/create",{"_index":536,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/swagger_example/entities/cat.entity.ts",{"_index":410,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/swagger_example/entities/cat.entity.ts:11",{"_index":416,"title":{},"body":{"classes/Cat.html":{}}}],["src/swagger_example/entities/cat.entity.ts:17",{"_index":419,"title":{},"body":{"classes/Cat.html":{}}}],["src/swagger_example/entities/cat.entity.ts:8",{"_index":420,"title":{},"body":{"classes/Cat.html":{}}}],["src/users_typeorm_example/dto/create",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users_typeorm_example/user.entity.ts",{"_index":790,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users_typeorm_example/user.entity.ts:12",{"_index":796,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:15",{"_index":791,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:18",{"_index":798,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:21",{"_index":797,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:24",{"_index":800,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:26",{"_index":799,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:29",{"_index":793,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:32",{"_index":795,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:6",{"_index":794,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/user.entity.ts:9",{"_index":792,"title":{},"body":{"classes/User.html":{}}}],["src/users_typeorm_example/users.controller.ts",{"_index":802,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users_typeorm_example/users.controller.ts:21",{"_index":806,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users_typeorm_example/users.controller.ts:31",{"_index":807,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users_typeorm_example/users.controller.ts:41",{"_index":808,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users_typeorm_example/users.controller.ts:50",{"_index":812,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users_typeorm_example/users.module.ts",{"_index":825,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users_typeorm_example/users.service.ts",{"_index":828,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users_typeorm_example/users.service.ts:14",{"_index":832,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users_typeorm_example/users.service.ts:29",{"_index":833,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users_typeorm_example/users.service.ts:33",{"_index":834,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users_typeorm_example/users.service.ts:37",{"_index":835,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users_typeorm_example/users.service.ts:8",{"_index":830,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/sharedbcofig.factory.ts",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srinivasan",{"_index":984,"title":{},"body":{"license.html":{}}}],["star",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["start",{"_index":950,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":952,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":953,"title":{},"body":{"index.html":{}}}],["started",{"_index":253,"title":{"index.html":{},"license.html":{}},"body":{"components/AppComponent.html":{}}}],["statements",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["status",{"_index":456,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":973,"title":{},"body":{"index.html":{}}}],["steps",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":577,"title":{"classes/Student.html":{}},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["student's",{"_index":582,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["student.dto",{"_index":720,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{}}}],["student.dto.ts",{"_index":545,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["student.dto.ts:101",{"_index":598,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:104",{"_index":776,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:110",{"_index":627,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:114",{"_index":768,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:119",{"_index":622,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:127",{"_index":772,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:128",{"_index":620,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:13",{"_index":571,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:137",{"_index":614,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:146",{"_index":589,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:147",{"_index":783,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:155",{"_index":585,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:157",{"_index":782,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:164",{"_index":605,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:167",{"_index":779,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:173",{"_index":625,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:177",{"_index":767,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:182",{"_index":601,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:187",{"_index":765,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:197",{"_index":777,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:20",{"_index":760,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:207",{"_index":785,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:217",{"_index":774,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:22",{"_index":611,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:30",{"_index":758,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:31",{"_index":616,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:40",{"_index":594,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:49",{"_index":608,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:50",{"_index":780,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:58",{"_index":618,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:60",{"_index":770,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:70",{"_index":778,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:71",{"_index":580,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:80",{"_index":603,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{}}}],["student.dto.ts:89",{"_index":591,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:94",{"_index":763,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["studentaadharnumber",{"_index":548,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentbloodgroup",{"_index":549,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentcaste",{"_index":550,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentclass",{"_index":551,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentcommunity",{"_index":552,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{},"miscellaneous/enumerations.html":{}}}],["studentcommunity'})@column({type",{"_index":682,"title":{},"body":{"classes/Student.html":{}}}],["studentcommunity'})@isstring()@isnotempty()@isenum(studentcommunity",{"_index":597,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["studentcommunity'})@isstring()@isnotempty()@isoptional()@isenum(studentcommunity",{"_index":771,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["studentdiscount",{"_index":553,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentdob",{"_index":554,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studenteminumber",{"_index":555,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentfathername",{"_index":556,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentfirstname",{"_index":557,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentlanguageknown",{"_index":558,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentlastname",{"_index":559,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentmothername",{"_index":560,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentmothertongue",{"_index":561,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentnationality",{"_index":562,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentpreviousschool",{"_index":563,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["studentreligion",{"_index":564,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["students",{"_index":704,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{}}}],["students.controller",{"_index":734,"title":{},"body":{"modules/StudentsModule.html":{}}}],["students.service",{"_index":719,"title":{},"body":{"controllers/StudentsController.html":{},"modules/StudentsModule.html":{}}}],["studentscontroller",{"_index":702,"title":{"controllers/StudentsController.html":{}},"body":{"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"coverage.html":{}}}],["studentsmodule",{"_index":373,"title":{"modules/StudentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["studentsservice",{"_index":718,"title":{"injectables/StudentsService.html":{}},"body":{"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/StudentsService.html":{},"coverage.html":{},"overview.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["sub",{"_index":595,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["subject",{"_index":1014,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1007,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1021,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":811,"title":{},"body":{"controllers/UsersController.html":{}}}],["such",{"_index":578,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["summary",{"_index":455,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1049,"title":{},"body":{"modules.html":{}}}],["svg#clouds",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["svg#rocket",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["svg.material",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["swagger",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["swagger_example/cats.module",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["symbol",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["synchronize",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["terminal",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["terminal::before",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["test:covsupport",{"_index":957,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":956,"title":{},"body":{"index.html":{}}}],["tests",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["text",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["thanks",{"_index":964,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":364,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats.push(cat",{"_index":471,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats[id",{"_index":472,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":458,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(+id",{"_index":461,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.configrepository.delete(id",{"_index":353,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configrepository.find",{"_index":350,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configrepository.findone(id",{"_index":351,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configrepository.save(config",{"_index":349,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.create(configdto",{"_index":484,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.configservice.findall",{"_index":485,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.studentsservice.create(createstudentdto",{"_index":724,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.studentsservice.findall",{"_index":725,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.studentsservice.findonlyrequestedid(id",{"_index":726,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.studentsservice.remove(+id",{"_index":730,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.studentsservice.update(+id",{"_index":728,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.usersrepository.delete(id",{"_index":858,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":856,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone(id",{"_index":857,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":855,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":819,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":820,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":821,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":822,"title":{},"body":{"controllers/UsersController.html":{}}}],["timestamp",{"_index":508,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["tongue",{"_index":613,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["toolbar",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":1043,"title":{},"body":{"license.html":{}}}],["touch",{"_index":974,"title":{},"body":{"index.html":{}}}],["transform",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["transformer",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["transition",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":533,"title":{},"body":{"modules/CoreModule.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/ConfigController.html":{},"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":331,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigEntity.html":{},"classes/Student.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule.forfeature([configentity",{"_index":527,"title":{},"body":{"modules/ConfigModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":827,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":509,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/CreateUserDto.html":{},"classes/Student.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":954,"title":{},"body":{"index.html":{}}}],["unset",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":705,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{}}}],["update(id",{"_index":712,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{}}}],["updated_at",{"_index":502,"title":{},"body":{"classes/ConfigEntity.html":{}}}],["updatedat",{"_index":662,"title":{},"body":{"classes/Student.html":{}}}],["updatedatecolumn",{"_index":522,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["updatedatecolumn({type",{"_index":515,"title":{},"body":{"classes/ConfigEntity.html":{},"classes/Student.html":{}}}],["updates",{"_index":753,"title":{},"body":{"injectables/StudentsService.html":{}}}],["updatestudentdto",{"_index":713,"title":{"classes/UpdateStudentDto.html":{}},"body":{"controllers/StudentsController.html":{},"injectables/StudentsService.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["use",{"_index":1002,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":789,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user'})@apiresponse({status",{"_index":805,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.age",{"_index":841,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":813,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.dto.ts:11",{"_index":648,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":654,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":653,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":656,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":655,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":650,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":649,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":814,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":837,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.gender",{"_index":843,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.isactive",{"_index":853,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.lastname",{"_index":839,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.primaryemailid",{"_index":847,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.primarymobilenumber",{"_index":845,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.secondaryemailid",{"_index":851,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.secondarymobilenumber",{"_index":849,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrole",{"_index":658,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["users",{"_index":803,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":826,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":816,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":801,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":390,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersrepository",{"_index":831,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":815,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":944,"title":{},"body":{"index.html":{}}}],["utils/sharedbcofig.factory",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":498,"title":{},"body":{"classes/ConfigDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{},"dependencies.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/CatsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["varchar",{"_index":672,"title":{},"body":{"classes/Student.html":{}}}],["variable",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1058,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["visibility",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["voicecallfeature",{"_index":490,"title":{},"body":{"classes/ConfigDto.html":{},"classes/ConfigEntity.html":{}}}],["want",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["warranties",{"_index":1028,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1024,"title":{},"body":{"license.html":{}}}],["watch",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["webkit",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["website",{"_index":978,"title":{},"body":{"index.html":{}}}],["weight",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["welcome",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":1041,"title":{},"body":{"license.html":{}}}],["white",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":997,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["xxx",{"_index":581,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/Student.html":{},"classes/UpdateStudentDto.html":{}}}],["xyz",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["you'd",{"_index":968,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["z",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["zoom",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/StudentsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    client/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'client'\n                    \n                \n                    \n                        \n                                Defined in client/src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .spacer {\n    flex: 1;\n  }\n\n  .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n  .toolbar img {\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo {\n    height: 40px;\n    margin: 0 8px;\n  }\n\n  .toolbar #youtube-logo {\n    height: 40px;\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo:hover,\n  .toolbar #youtube-logo:hover {\n    opacity: 0.8;\n  }\n\n  .content {\n    display: flex;\n    margin: 82px auto 32px;\n    padding: 0 16px;\n    max-width: 960px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg.material-icons {\n    height: 24px;\n    width: auto;\n  }\n\n  svg.material-icons:not(:last-child) {\n    margin-right: 8px;\n  }\n\n  .card svg.material-icons path {\n    fill: #888;\n  }\n\n  .card-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-top: 16px;\n  }\n\n  .card {\n    all: unset;\n    border-radius: 4px;\n    border: 1px solid #eee;\n    background-color: #fafafa;\n    height: 40px;\n    width: 200px;\n    margin: 0 8px 16px;\n    padding: 16px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    line-height: 24px;\n  }\n\n  .card-container .card:not(:last-child) {\n    margin-right: 0;\n  }\n\n  .card.card-small {\n    height: 16px;\n    width: 168px;\n  }\n\n  .card-container .card:not(.highlight-card) {\n    cursor: pointer;\n  }\n\n  .card-container .card:not(.highlight-card):hover {\n    transform: translateY(-3px);\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n  }\n\n  .card-container .card:not(.highlight-card):hover .material-icons path {\n    fill: rgb(105, 103, 103);\n  }\n\n  .card.highlight-card {\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n    border: none;\n    width: auto;\n    min-width: 30%;\n    position: relative;\n  }\n\n  .card.card.highlight-card span {\n    margin-left: 60px;\n  }\n\n  svg#rocket {\n    width: 80px;\n    position: absolute;\n    left: -10px;\n    top: -24px;\n  }\n\n  svg#rocket-smoke {\n    height: calc(100vh - 95px);\n    position: absolute;\n    top: 10px;\n    right: 180px;\n    z-index: -10;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: #1976d2;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #125699;\n  }\n\n  .terminal {\n    position: relative;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 6px;\n    padding-top: 45px;\n    margin-top: 8px;\n    overflow: hidden;\n    background-color: rgb(15, 15, 16);\n  }\n\n  .terminal::before {\n    content: \"\\2022 \\2022 \\2022\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 4px;\n    background: rgb(58, 58, 58);\n    color: #c2c3c4;\n    width: 100%;\n    font-size: 2rem;\n    line-height: 0;\n    padding: 14px 0;\n    text-indent: 4px;\n  }\n\n  .terminal pre {\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\n    color: white;\n    padding: 0 1rem 1rem;\n    margin: 0;\n  }\n\n  .circle-link {\n    height: 40px;\n    width: 40px;\n    border-radius: 40px;\n    margin: 8px;\n    background-color: white;\n    border: 1px solid #eeeeee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: 1s ease-out;\n  }\n\n  .circle-link:hover {\n    transform: translateY(-0.25rem);\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  }\n\n  footer {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n    line-height: 20px;\n  }\n\n  footer a {\n    display: flex;\n    align-items: center;\n  }\n\n  .github-star-badge {\n    color: #24292e;\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding: 3px 10px;\n    border: 1px solid rgba(27,31,35,.2);\n    border-radius: 3px;\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\n    margin-left: 4px;\n    font-weight: 600;\n  }\n\n  .github-star-badge:hover {\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\n    border-color: rgba(27,31,35,.35);\n    background-position: -.5em;\n  }\n\n  .github-star-badge .material-icons {\n    height: 16px;\n    width: 16px;\n    margin-right: 4px;\n  }\n\n  svg#clouds {\n    position: fixed;\n    bottom: -160px;\n    left: -230px;\n    z-index: -10;\n    width: 1920px;\n  }\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n\n\n\n\n  \n  Welcome\n    \n    \n      \n        \n        \n      \n    \n    \n      \n        \n        \n      \n    \n\n\n\n\n  \n  \n\n    \n      Rocket Ship\n      \n        \n        \n          \n          \n        \n      \n    \n\n    {{ title }} app is running!\n\n    \n      Rocket Ship Smoke\n      \n    \n\n  \n\n  \n  Resources\n  Here are some links to help you get started:\n\n  \n    \n      \n      Learn Angular\n          \n\n    \n      \n      CLI Documentation\n      \n    \n\n    \n      \n      Angular Material\n      \n    \n\n    \n      \n      Angular Blog\n      \n    \n\n    \n      \n      Angular DevTools\n      \n    \n\n  \n\n  \n  Next Steps\n  What do you want to do next with your app?\n\n  \n\n  \n    \n      \n      New Component\n    \n\n    \n      \n      Angular Material\n    \n\n    \n      \n      Add PWA Support\n    \n\n    \n      \n      Add Dependency\n    \n\n    \n      \n      Run and Watch Tests\n    \n\n    \n      \n      Build for Production\n    \n  \n\n  \n  \n      ng generate component xyz\n      ng add @angular/material\n      ng add @angular/pwa\n      ng add _____\n      ng test\n      ng build\n  \n\n  \n  \n    \n      \n        Meetup Logo\n        \n      \n    \n\n    \n      \n        Discord Logo\n        \n        \n      \n    \n  \n\n  \n  \n      Love Angular?&nbsp;\n       Give our repo a star.\n        \n            \n          Star\n        \n      \n      \n        \n      \n  \n\n  \n    Gray Clouds Background\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  :host {    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";    font-size: 14px;    color: #333;    box-sizing: border-box;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }  h1,  h2,  h3,  h4,  h5,  h6 {    margin: 8px 0;  }  p {    margin: 0;  }  .spacer {    flex: 1;  }  .toolbar {    position: absolute;    top: 0;    left: 0;    right: 0;    height: 60px;    display: flex;    align-items: center;    background-color: #1976d2;    color: white;    font-weight: 600;  }  .toolbar img {    margin: 0 16px;  }  .toolbar #twitter-logo {    height: 40px;    margin: 0 8px;  }  .toolbar #youtube-logo {    height: 40px;    margin: 0 16px;  }  .toolbar #twitter-logo:hover,  .toolbar #youtube-logo:hover {    opacity: 0.8;  }  .content {    display: flex;    margin: 82px auto 32px;    padding: 0 16px;    max-width: 960px;    flex-direction: column;    align-items: center;  }  svg.material-icons {    height: 24px;    width: auto;  }  svg.material-icons:not(:last-child) {    margin-right: 8px;  }  .card svg.material-icons path {    fill: #888;  }  .card-container {    display: flex;    flex-wrap: wrap;    justify-content: center;    margin-top: 16px;  }  .card {    all: unset;    border-radius: 4px;    border: 1px solid #eee;    background-color: #fafafa;    height: 40px;    width: 200px;    margin: 0 8px 16px;    padding: 16px;    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    transition: all 0.2s ease-in-out;    line-height: 24px;  }  .card-container .card:not(:last-child) {    margin-right: 0;  }  .card.card-small {    height: 16px;    width: 168px;  }  .card-container .card:not(.highlight-card) {    cursor: pointer;  }  .card-container .card:not(.highlight-card):hover {    transform: translateY(-3px);    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);  }  .card-container .card:not(.highlight-card):hover .material-icons path {    fill: rgb(105, 103, 103);  }  .card.highlight-card {    background-color: #1976d2;    color: white;    font-weight: 600;    border: none;    width: auto;    min-width: 30%;    position: relative;  }  .card.card.highlight-card span {    margin-left: 60px;  }  svg#rocket {    width: 80px;    position: absolute;    left: -10px;    top: -24px;  }  svg#rocket-smoke {    height: calc(100vh - 95px);    position: absolute;    top: 10px;    right: 180px;    z-index: -10;  }  a,  a:visited,  a:hover {    color: #1976d2;    text-decoration: none;  }  a:hover {    color: #125699;  }  .terminal {    position: relative;    width: 80%;    max-width: 600px;    border-radius: 6px;    padding-top: 45px;    margin-top: 8px;    overflow: hidden;    background-color: rgb(15, 15, 16);  }  .terminal::before {    content: \"\\2022 \\2022 \\2022\";    position: absolute;    top: 0;    left: 0;    height: 4px;    background: rgb(58, 58, 58);    color: #c2c3c4;    width: 100%;    font-size: 2rem;    line-height: 0;    padding: 14px 0;    text-indent: 4px;  }  .terminal pre {    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;    color: white;    padding: 0 1rem 1rem;    margin: 0;  }  .circle-link {    height: 40px;    width: 40px;    border-radius: 40px;    margin: 8px;    background-color: white;    border: 1px solid #eeeeee;    display: flex;    justify-content: center;    align-items: center;    cursor: pointer;    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);    transition: 1s ease-out;  }  .circle-link:hover {    transform: translateY(-0.25rem);    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);  }  footer {    margin-top: 8px;    display: flex;    align-items: center;    line-height: 20px;  }  footer a {    display: flex;    align-items: center;  }  .github-star-badge {    color: #24292e;    display: flex;    align-items: center;    font-size: 12px;    padding: 3px 10px;    border: 1px solid rgba(27,31,35,.2);    border-radius: 3px;    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);    margin-left: 4px;    font-weight: 600;  }  .github-star-badge:hover {    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);    border-color: rgba(27,31,35,.35);    background-position: -.5em;  }  .github-star-badge .material-icons {    height: 16px;    width: 16px;    margin-right: 4px;  }  svg#clouds {    position: fixed;    bottom: -160px;    left: -230px;    z-index: -10;    width: 1920px;  }  /* Responsive Styles */  @media screen and (max-width: 767px) {    .card-container > *:not(.circle-link) ,    .terminal {      width: 100%;    }    .card:not(.highlight-card) {      height: 16px;      margin: 8px 0;    }    .card.highlight-card span {      margin-left: 72px;    }    svg#rocket-smoke {      right: 120px;      transform: rotate(-5deg);    }  }  @media screen and (max-width: 575px) {    svg#rocket-smoke {      display: none;      visibility: hidden;    }  }    Welcome                                                                                          Rocket Ship                                                                {{ title }} app is running!          Rocket Ship Smoke                Resources  Here are some links to help you get started:                  Learn Angular                          CLI Documentation                          Angular Material                          Angular Blog                          Angular DevTools                Next Steps  What do you want to do next with your app?                    New Component                    Angular Material                    Add PWA Support                    Add Dependency                    Run and Watch Tests                    Build for Production                ng generate component xyz      ng add @angular/material      ng add @angular/pwa      ng add _____      ng test      ng build                        Meetup Logo                                    Discord Logo                                      Love Angular?        Give our repo a star.                              Star                                          Gray Clouds Background      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/config/services/config.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(configurationDto: ConfigDto)\n                \n            \n\n\n            \n                \n                    Defined in src/config/services/config.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurationDto\n                                    \n                                                ConfigDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/config/services/config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/services/config.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/services/config.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ConfigDto } from '../dto/config.dto';\nimport { ConfigEntity } from '../entities/config.entity';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(\n    @InjectRepository(ConfigEntity)\n    private readonly configRepository: Repository\n  ) {}\n\n  create(configurationDto: ConfigDto): Promise {\n    const config = new ConfigEntity();\n\n    config.emailFeature = configurationDto.emailFeature;\n    config.smsFeature = configurationDto.smsFeature;\n    config.calendarFeature = configurationDto.calendarFeature;\n    config.voiceCallFeature = configurationDto.voiceCallFeature;\n\n    return this.configRepository.save(config);\n  }\n\n  async findAll(): Promise {\n    return this.configRepository.find();\n  }\n\n  findOne(id: string): Promise {\n    return this.configRepository.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.configRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nStudentsModule\n\nStudentsModule\n\nAppModule -->\n\nStudentsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            StudentsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { CoreModule } from '@core/core.module'\n// import { CatsModule } from './swagger_example/cats.module';\nimport { dbConfigSetUp as DBconfig } from '@utils/shareDBcofig.factory'\nimport { StudentsModule } from '@resources/students/students.module'\n\nconst MODULES = [\n    CoreModule,\n    // UsersModule,\n    // ConfigModule,\n    // UsersModule,\n    StudentsModule,\n]\nconst TYPEORMMODULE = TypeOrmModule.forRootAsync({\n    imports: [StudentsModule],\n    inject: [ConfigService],\n    useFactory: (configService: ConfigService) => DBconfig(configService),\n})\n\n@Module({\n    imports: [TYPEORMMODULE, ...MODULES],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            client/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Heelo ';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger_example/entities/cat.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The age of the Cat'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/entities/cat.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Maine Coon', description: 'The breed of the Cat'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/entities/cat.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/entities/cat.entity.ts:8\n                        \n                    \n\n            \n                \n                    The name of the Cat\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class Cat {\n  /**\n   * The name of the Cat\n   * @example Kitty\n   */\n  name: string;\n\n  @ApiProperty({ example: 1, description: 'The age of the Cat' })\n  age: number;\n\n  @ApiProperty({\n    example: 'Maine Coon',\n    description: 'The breed of the Cat',\n  })\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger_example/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create cat'})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/swagger_example/cats.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'The found record', type: Cat})\n                \n            \n\n            \n                \n                    Defined in src/swagger_example/cats.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CatsService } from './cats.service';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { Cat } from './entities/cat.entity';\n\n@ApiBearerAuth()\n@ApiTags('cats')\n@Controller('cats')\nexport class CatsController {\n  constructor(private readonly catsService: CatsService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create cat' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async create(@Body() createCatDto: CreateCatDto): Promise {\n    return this.catsService.create(createCatDto);\n  }\n\n  @Get(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: Cat,\n  })\n  findOne(@Param('id') id: string): Cat {\n    return this.catsService.findOne(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/swagger_example/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger_example/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/swagger_example/cats.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/swagger_example/cats.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/cats.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { Cat } from './entities/cat.entity';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  create(cat: CreateCatDto): Cat {\n    this.cats.push(cat);\n    return cat;\n  }\n\n  findOne(id: number): Cat {\n    return this.cats[id];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConfigController.html":{"url":"controllers/ConfigController.html","title":"controller - ConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(configDto: ConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create new configuration'})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/config/config.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configDto\n                                    \n                                                ConfigDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'The found record', type: ConfigEntity})\n                \n            \n\n            \n                \n                    Defined in src/config/config.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { ConfigEntity } from './entities/config.entity';\nimport { AppConfigService } from './services/config.service';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ConfigDto } from './dto/config.dto';\n\n@ApiBearerAuth()\n@ApiTags('configs')\n@Controller('config')\nexport class ConfigController {\n  constructor(private readonly configService: AppConfigService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create new configuration' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  create(@Body() configDto: ConfigDto): Promise {\n    return this.configService.create(configDto);\n  }\n\n  @Get()\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: ConfigEntity,\n  })\n  findAll(): Promise {\n    return this.configService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigDto.html":{"url":"classes/ConfigDto.html","title":"class - ConfigDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                calendarFeature\n                            \n                            \n                                    Readonly\n                                emailFeature\n                            \n                            \n                                    Readonly\n                                smsFeature\n                            \n                            \n                                    Readonly\n                                voiceCallFeature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        calendarFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        emailFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smsFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/dto/config.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        voiceCallFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/dto/config.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsBoolean } from 'class-validator'\nexport class ConfigDto {\n    @IsBoolean()\n    @ApiProperty()\n    readonly smsFeature: boolean\n\n    @IsBoolean()\n    @ApiProperty()\n    readonly emailFeature: boolean\n\n    @IsBoolean()\n    @ApiProperty()\n    readonly calendarFeature: boolean\n\n    @IsBoolean()\n    @ApiProperty()\n    readonly voiceCallFeature: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigEntity.html":{"url":"classes/ConfigEntity.html","title":"class - ConfigEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/entities/config.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarFeature\n                            \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                emailFeature\n                            \n                            \n                                id\n                            \n                            \n                                smsFeature\n                            \n                            \n                                    Public\n                                updated_at\n                            \n                            \n                                voiceCallFeature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        smsFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: undefined, onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        voiceCallFeature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/entities/config.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n} from 'typeorm'\n\n@Entity()\nexport class ConfigEntity {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column({ default: false })\n    smsFeature: boolean\n\n    @Column({ default: false })\n    emailFeature: boolean\n\n    @Column({ default: false })\n    calendarFeature: boolean\n\n    @Column({ default: false })\n    voiceCallFeature: boolean\n\n    @CreateDateColumn({\n        type: 'timestamp',\n        default: () => 'CURRENT_TIMESTAMP(6)',\n    })\n    public created_at: Date\n\n    @UpdateDateColumn({\n        type: 'timestamp',\n        default: () => 'CURRENT_TIMESTAMP(6)',\n        onUpdate: 'CURRENT_TIMESTAMP(6)',\n    })\n    public updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_providers\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nAppConfigService->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { ConfigEntity } from './entities/config.entity'\nimport { ConfigController } from './config.controller'\nimport { AppConfigService } from './services/config.service'\n@Module({\n    imports: [TypeOrmModule.forFeature([ConfigEntity])],\n    providers: [AppConfigService],\n    controllers: [ConfigController],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport * as config from './configuration';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config.default],\n    }),\n  ],\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger_example/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/dto/create-cat.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/dto/create-cat.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/swagger_example/dto/create-cat.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsString()\n  readonly name: string;\n\n  @IsInt()\n  readonly age: number;\n\n  @IsString()\n  readonly breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStudentDto.html":{"url":"classes/CreateStudentDto.html","title":"class - CreateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/students/dto/create-student.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admissionDate\n                            \n                            \n                                role\n                            \n                            \n                                studentAadharNumber\n                            \n                            \n                                studentBloodGroup\n                            \n                            \n                                studentCaste\n                            \n                            \n                                studentClass\n                            \n                            \n                                studentCommunity\n                            \n                            \n                                studentDiscount\n                            \n                            \n                                studentDOB\n                            \n                            \n                                studentEMINumber\n                            \n                            \n                                studentFatherName\n                            \n                            \n                                studentFirstName\n                            \n                            \n                                studentLanguageKnown\n                            \n                            \n                                studentLastName\n                            \n                            \n                                studentMotherName\n                            \n                            \n                                studentMotherTongue\n                            \n                            \n                                studentNationality\n                            \n                            \n                                studentPreviousSchool\n                            \n                            \n                                studentReligion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admissionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '20-12-2021', type: 'date', description: 'Describes about admission date'})@IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Gender, enumName: 'Gender', example: 'Male', type: 'string', description: 'Describe about student gender type such as male or female'})@IsString()@IsNotEmpty()@IsEnum(Gender)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentAadharNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's adhaar number'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentBloodGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's blood group name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentCaste\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's caste name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Class', type: 'string', description: 'Describes about student current class'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentCommunity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StudentCommunity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', description: 'Describes about student's sub caste name', enum: StudentCommunity, type: 'string', enumName: 'StudentCommunity'})@IsString()@IsNotEmpty()@IsEnum(StudentCommunity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentDiscount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's discount percentage'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentDOB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '20-12-2021', type: 'date', description: 'Describes about student date of birth'})@IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentEMINumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's EMI's  number'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFatherName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ranga', type: 'string', description: 'Describes about student's father name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ram', type: 'string', description: 'Describes about student first name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentLanguageKnown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's mother tongue name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentLastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ram', type: 'string', description: 'Describes about student last name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentMotherName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Devi', type: 'string', description: 'Describes about student's mother name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentMotherTongue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', example: 'XXX', description: 'Describes about student's mother tongue name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentNationality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's nationality name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentPreviousSchool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's previous school'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentReligion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's religion name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/create-student.dto.ts:110\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { Gender, StudentCommunity } from '@shared/enum'\nimport { IsDate, IsEnum, IsNotEmpty, IsString } from 'class-validator'\n\nexport class CreateStudentDto {\n    @ApiProperty({\n        example: '20-12-2021',\n        type: 'date',\n        description: 'Describes about admission date',\n    })\n    @IsDate()\n    @IsNotEmpty()\n    admissionDate: Date\n\n    @ApiProperty({\n        example: 'Ram',\n        type: 'string',\n        description: 'Describes about student first name',\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentFirstName: string\n\n    @ApiProperty({\n        example: 'Ram',\n        type: 'string',\n        description: 'Describes about student last name',\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentLastName: string\n\n    @ApiProperty({\n        example: 'Class',\n        type: 'string',\n        description: 'Describes about student current class',\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentClass: string\n\n    @ApiProperty({\n        example: 'Ranga',\n        type: 'string',\n        description: \"Describes about student's father name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentFatherName: string\n\n    @ApiProperty({\n        example: 'Devi',\n        type: 'string',\n        description: \"Describes about student's mother name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentMotherName: string\n\n    @ApiProperty({\n        enum: Gender,\n        enumName: 'Gender',\n        example: 'Male',\n        type: 'string',\n        description:\n            'Describe about student gender type such as male or female',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(Gender)\n    role: Gender\n\n    @ApiProperty({\n        example: '20-12-2021',\n        type: 'date',\n        description: 'Describes about student date of birth',\n    })\n    @IsDate()\n    @IsNotEmpty()\n    studentDOB: Date\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's caste name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentCaste: string\n\n    @ApiProperty({\n        example: 'XXX',\n        description: \"Describes about student's sub caste name\",\n        enum: StudentCommunity,\n        type: 'string',\n        enumName: 'StudentCommunity',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(StudentCommunity)\n    studentCommunity: StudentCommunity\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's religion name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentReligion: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's nationality name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentNationality: string\n\n    @ApiProperty({\n        type: 'string',\n        example: 'XXX',\n        description: \"Describes about student's mother tongue name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentMotherTongue: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's mother tongue name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentLanguageKnown: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's blood group name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentBloodGroup: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's adhaar number\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentAadharNumber: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's EMI's  number\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentEMINumber: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's previous school\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentPreviousSchool: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's discount percentage\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    studentDiscount: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users_typeorm_example/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                primaryEmailId\n                            \n                            \n                                primaryMobileNumber\n                            \n                            \n                                secondaryEmailId\n                            \n                            \n                                secondaryMobileNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryMobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondaryEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondaryMobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class CreateUserDto {\n    @ApiProperty()\n    firstName: string\n\n    @ApiProperty()\n    lastName: string\n\n    @ApiProperty()\n    age: number\n\n    @ApiProperty()\n    primaryMobileNumber: string\n\n    @ApiProperty()\n    primaryEmailId: string\n\n    @ApiProperty()\n    secondaryMobileNumber: string\n\n    @ApiProperty()\n    secondaryEmailId: string\n\n    @ApiProperty()\n    isActive: boolean\n\n    @ApiProperty({ enum: ['Male', 'Female', 'Others'] })\n    gender: string\n}\nexport enum UserRole {\n    Male = 'Male',\n    Female = 'Female',\n    Others = 'Others',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/students/entities/student.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admissionDate\n                            \n                            \n                                admissionnId\n                            \n                            \n                                createdAt\n                            \n                            \n                                role\n                            \n                            \n                                studentAadharNumber\n                            \n                            \n                                studentBloodGroup\n                            \n                            \n                                studentCaste\n                            \n                            \n                                studentClass\n                            \n                            \n                                studentCommunity\n                            \n                            \n                                studentDiscount\n                            \n                            \n                                studentDOB\n                            \n                            \n                                studentEMINumber\n                            \n                            \n                                studentFatherName\n                            \n                            \n                                studentFirstName\n                            \n                            \n                                studentLanguageKnown\n                            \n                            \n                                studentLastName\n                            \n                            \n                                studentMotherName\n                            \n                            \n                                studentMotherTongue\n                            \n                            \n                                studentNationality\n                            \n                            \n                                studentPreviousSchool\n                            \n                            \n                                studentReligion\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admissionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '20-12-2021', type: 'date', description: 'Describes about admission date'})@Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        admissionnId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, type: 'number', description: 'Admission Id is auto incremented'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:255\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Gender, enumName: 'Gender', example: 'Male', type: 'string', description: 'Describe about student gender type such as male or female'})@Column({type: 'enum', enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentAadharNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's adhaar number'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentBloodGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's blood group name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentCaste\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's caste name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Class', type: 'string', description: 'Describes about student current class'})@Column({type: 'char', length: 5, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentCommunity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', description: 'Describes about student's sub caste name', enum: StudentCommunity, type: 'string', enumName: 'StudentCommunity'})@Column({type: 'enum', enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentDiscount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's discount percentage'})@Column({type: 'number', length: 2, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentDOB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '20-12-2021', type: 'date', description: 'Describes about student date of birth'})@Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentEMINumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's EMI's  number'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:225\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFatherName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ranga', type: 'string', description: 'Describes about student's father name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ram', type: 'string', description: 'Describes about student first name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentLanguageKnown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's mother tongue name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentLastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ram', type: 'string', description: 'Describes about student last name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentMotherName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Devi', type: 'string', description: 'Describes about student's mother name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentMotherTongue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', example: 'XXX', description: 'Describes about student's mother tongue name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentNationality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's nationality name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentPreviousSchool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's previous school'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:237\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentReligion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'XXX', type: 'string', description: 'Describes about student's religion name'})@Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: undefined, onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/entities/student.entity.ts:262\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n} from 'typeorm'\n\nimport { ApiProperty } from '@nestjs/swagger'\nimport { Gender, StudentCommunity } from '@shared/enum'\n\n@Entity()\nexport class Student {\n    @ApiProperty({\n        example: 1,\n        type: 'number',\n        description: 'Admission Id is auto incremented',\n    })\n    @PrimaryGeneratedColumn()\n    admissionnId: number\n\n    @ApiProperty({\n        example: '20-12-2021',\n        type: 'date',\n        description: 'Describes about admission date',\n    })\n    @Column({\n        type: 'date',\n        nullable: false,\n    })\n    admissionDate: Date\n\n    @ApiProperty({\n        example: 'Ram',\n        type: 'string',\n        description: 'Describes about student first name',\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentFirstName: string\n\n    @ApiProperty({\n        example: 'Ram',\n        type: 'string',\n        description: 'Describes about student last name',\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentLastName: string\n\n    @ApiProperty({\n        example: 'Class',\n        type: 'string',\n        description: 'Describes about student current class',\n    })\n    @Column({\n        type: 'char',\n        length: 5,\n        nullable: false,\n    })\n    studentClass: string\n\n    @ApiProperty({\n        example: 'Ranga',\n        type: 'string',\n        description: \"Describes about student's father name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentFatherName: string\n\n    @ApiProperty({\n        example: 'Devi',\n        type: 'string',\n        description: \"Describes about student's mother name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentMotherName: string\n\n    @ApiProperty({\n        enum: Gender,\n        enumName: 'Gender',\n        example: 'Male',\n        type: 'string',\n        description:\n            'Describe about student gender type such as male or female',\n    })\n    @Column({\n        type: 'enum',\n        enum: Gender,\n    })\n    role: Gender\n\n    @ApiProperty({\n        example: '20-12-2021',\n        type: 'date',\n        description: 'Describes about student date of birth',\n    })\n    @Column({\n        type: 'date',\n        nullable: false,\n    })\n    studentDOB: Date\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's caste name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentCaste: string\n\n    @ApiProperty({\n        example: 'XXX',\n        description: \"Describes about student's sub caste name\",\n        enum: StudentCommunity,\n        type: 'string',\n        enumName: 'StudentCommunity',\n    })\n    @Column({\n        type: 'enum',\n        enum: Gender,\n    })\n    studentCommunity: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's religion name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentReligion: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's nationality name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentNationality: string\n\n    @ApiProperty({\n        type: 'string',\n        example: 'XXX',\n        description: \"Describes about student's mother tongue name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentMotherTongue: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's mother tongue name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentLanguageKnown: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's blood group name\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentBloodGroup: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's adhaar number\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentAadharNumber: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's EMI's  number\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentEMINumber: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's previous school\",\n    })\n    @Column({\n        type: 'varchar',\n        length: 100,\n        nullable: false,\n    })\n    studentPreviousSchool: string\n\n    @ApiProperty({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's discount percentage\",\n    })\n    @Column({\n        type: 'number',\n        length: 2,\n        nullable: false,\n    })\n    studentDiscount: string\n\n    @CreateDateColumn({\n        type: 'timestamp',\n        default: () => 'CURRENT_TIMESTAMP(6)',\n    })\n    createdAt: Date\n\n    @UpdateDateColumn({\n        type: 'timestamp',\n        default: () => 'CURRENT_TIMESTAMP(6)',\n        onUpdate: 'CURRENT_TIMESTAMP(6)',\n    })\n    updatedAt: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentsController.html":{"url":"controllers/StudentsController.html","title":"controller - StudentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/students/students.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                students\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createStudentDto: CreateStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/students/students.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStudentDto\n                                    \n                                                CreateStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/students/students.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/students/students.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/students/students.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateStudentDto: UpdateStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/students/students.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStudentDto\n                                    \n                                                UpdateStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Patch,\n    Param,\n    Delete,\n} from '@nestjs/common'\nimport { StudentsService } from './students.service'\nimport { CreateStudentDto } from './dto/create-student.dto'\nimport { UpdateStudentDto } from './dto/update-student.dto'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('students')\n@Controller('students')\nexport class StudentsController {\n    constructor(private readonly studentsService: StudentsService) {}\n\n    @Post()\n    create(@Body() createStudentDto: CreateStudentDto) {\n        return this.studentsService.create(createStudentDto)\n    }\n\n    @Get()\n    findAll() {\n        return this.studentsService.findAll()\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n        return this.studentsService.findOnlyRequestedId(id)\n    }\n\n    @Patch(':id')\n    update(\n        @Param('id') id: string,\n        @Body() updateStudentDto: UpdateStudentDto\n    ) {\n        return this.studentsService.update(+id, updateStudentDto)\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.studentsService.remove(+id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentsModule.html":{"url":"modules/StudentsModule.html","title":"module - StudentsModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StudentsModule\n\n\n\ncluster_StudentsModule_providers\n\n\n\n\nStudentsService\n\nStudentsService\n\n\n\nStudentsModule\n\nStudentsModule\n\nStudentsModule -->\n\nStudentsService->StudentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/students/students.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { StudentsService } from './students.service'\nimport { StudentsController } from './students.controller'\n\n@Module({\n    controllers: [StudentsController],\n    providers: [StudentsService],\n})\nexport class StudentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentsService.html":{"url":"injectables/StudentsService.html","title":"injectable - StudentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StudentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/students/students.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findOnlyRequestedId\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createStudentDto: CreateStudentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/students/students.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStudentDto\n                                    \n                                                CreateStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/students/students.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/students/students.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOnlyRequestedId\n                        \n                    \n                \n            \n            \n                \nfindOnlyRequestedId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/students/students.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/students/students.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateStudentDto: UpdateStudentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/students/students.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStudentDto\n                                    \n                                                UpdateStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateStudentDto } from './dto/create-student.dto'\nimport { UpdateStudentDto } from './dto/update-student.dto'\n\n@Injectable()\nexport class StudentsService {\n    create(createStudentDto: CreateStudentDto) {\n        return 'This action adds a new student'\n    }\n\n    findAll() {\n        return `This action returns all students`\n    }\n\n    findOnlyRequestedId(id: string) {\n        const getIds: string | Array | number = id.split(':')\n        const ID: number | Array = getIds.length\n            ? getIds.map((i) => Number(i))\n            : Number(getIds)\n\n        return `This action returns a #${ID} student`\n    }\n\n    findOne(id: number) {\n        return `This action returns a #${id} student`\n    }\n\n    update(id: number, updateStudentDto: UpdateStudentDto) {\n        return `This action updates a #${id} student`\n    }\n\n    remove(id: number) {\n        return `This action removes a #${id} student`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStudentDto.html":{"url":"classes/UpdateStudentDto.html","title":"class - UpdateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/students/dto/update-student.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admissionDate\n                            \n                            \n                                admissionnId\n                            \n                            \n                                role\n                            \n                            \n                                studentAadharNumber\n                            \n                            \n                                studentBloodGroup\n                            \n                            \n                                studentCaste\n                            \n                            \n                                studentClass\n                            \n                            \n                                studentCommunity\n                            \n                            \n                                studentDiscount\n                            \n                            \n                                studentDOB\n                            \n                            \n                                studentEMINumber\n                            \n                            \n                                studentFatherName\n                            \n                            \n                                studentFirstName\n                            \n                            \n                                studentLanguageKnown\n                            \n                            \n                                studentLastName\n                            \n                            \n                                studentMotherName\n                            \n                            \n                                studentMotherTongue\n                            \n                            \n                                studentNationality\n                            \n                            \n                                studentPreviousSchool\n                            \n                            \n                                studentReligion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admissionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '20-12-2021', type: 'date', description: 'Describes about admission date'})@IsDate()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        admissionnId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, type: 'number', description: 'Admission Id is auto incremented'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Gender, enumName: 'Gender', example: 'Male', type: 'string', description: 'Describe about student gender type such as male or female'})@IsString()@IsNotEmpty()@IsOptional()@IsEnum(Gender)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentAadharNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's adhaar number'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:187\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentBloodGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's blood group name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentCaste\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's caste name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Class', type: 'string', description: 'Describes about student current class'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentCommunity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StudentCommunity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', description: 'Describes about student's sub caste name', enum: StudentCommunity, type: 'string', enumName: 'StudentCommunity'})@IsString()@IsNotEmpty()@IsOptional()@IsEnum(StudentCommunity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentDiscount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's discount percentage'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentDOB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '20-12-2021', type: 'date', description: 'Describes about student date of birth'})@IsDate()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentEMINumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's EMI's  number'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:197\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFatherName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Ranga', type: 'string', description: 'Describes about student's father name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Ram', type: 'string', description: 'Describes about student first name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentLanguageKnown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's mother tongue name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentLastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Ram', type: 'string', description: 'Describes about student last name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentMotherName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Devi', type: 'string', description: 'Describes about student's mother name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentMotherTongue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', example: 'XXX', description: 'Describes about student's mother tongue name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentNationality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's nationality name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentPreviousSchool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's previous school'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:207\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentReligion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'XXX', type: 'string', description: 'Describes about student's religion name'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/students/dto/update-student.dto.ts:137\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\nimport { Gender, StudentCommunity } from '@shared/enum'\nimport {\n    IsDate,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsOptional,\n    IsString,\n} from 'class-validator'\n\nexport class UpdateStudentDto {\n    @ApiProperty({\n        example: 1,\n        type: 'number',\n        description: 'Admission Id is auto incremented',\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    admissionnId: number\n\n    @ApiPropertyOptional({\n        example: '20-12-2021',\n        type: 'date',\n        description: 'Describes about admission date',\n    })\n    @IsDate()\n    @IsNotEmpty()\n    @IsOptional()\n    admissionDate: Date\n\n    @ApiPropertyOptional({\n        example: 'Ram',\n        type: 'string',\n        description: 'Describes about student first name',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentFirstName: string\n\n    @ApiPropertyOptional({\n        example: 'Ram',\n        type: 'string',\n        description: 'Describes about student last name',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentLastName: string\n\n    @ApiPropertyOptional({\n        example: 'Class',\n        type: 'string',\n        description: 'Describes about student current class',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentClass: string\n\n    @ApiPropertyOptional({\n        example: 'Ranga',\n        type: 'string',\n        description: \"Describes about student's father name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentFatherName: string\n\n    @ApiPropertyOptional({\n        example: 'Devi',\n        type: 'string',\n        description: \"Describes about student's mother name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentMotherName: string\n\n    @ApiPropertyOptional({\n        enum: Gender,\n        enumName: 'Gender',\n        example: 'Male',\n        type: 'string',\n        description:\n            'Describe about student gender type such as male or female',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    @IsEnum(Gender)\n    role: Gender\n\n    @ApiPropertyOptional({\n        example: '20-12-2021',\n        type: 'date',\n        description: 'Describes about student date of birth',\n    })\n    @IsDate()\n    @IsNotEmpty()\n    @IsOptional()\n    studentDOB: Date\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's caste name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentCaste: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        description: \"Describes about student's sub caste name\",\n        enum: StudentCommunity,\n        type: 'string',\n        enumName: 'StudentCommunity',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    @IsEnum(StudentCommunity)\n    studentCommunity: StudentCommunity\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's religion name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentReligion: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's nationality name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentNationality: string\n\n    @ApiPropertyOptional({\n        type: 'string',\n        example: 'XXX',\n        description: \"Describes about student's mother tongue name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentMotherTongue: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's mother tongue name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentLanguageKnown: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's blood group name\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentBloodGroup: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's adhaar number\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentAadharNumber: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's EMI's  number\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentEMINumber: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's previous school\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentPreviousSchool: string\n\n    @ApiPropertyOptional({\n        example: 'XXX',\n        type: 'string',\n        description: \"Describes about student's discount percentage\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    studentDiscount: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users_typeorm_example/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                primaryEmailId\n                            \n                            \n                                primaryMobileNumber\n                            \n                            \n                                secondaryEmailId\n                            \n                            \n                                secondaryMobileNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryMobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondaryEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondaryMobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users_typeorm_example/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  age: number;\n\n  @Column()\n  primaryMobileNumber: string;\n\n  @Column()\n  primaryEmailId: string;\n\n  @Column()\n  secondaryMobileNumber: string;\n  @Column()\n  secondaryEmailId: string;\n\n  @Column()\n  gender: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users_typeorm_example/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create new user'})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/users_typeorm_example/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'The found record', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/users_typeorm_example/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'The found record', type: User})\n                \n            \n\n            \n                \n                    Defined in src/users_typeorm_example/users.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'Deleted successfully'})\n                \n            \n\n            \n                \n                    Defined in src/users_typeorm_example/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './user.entity';\nimport { UsersService } from './users.service';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create new user' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  create(@Body() createUserDto: CreateUserDto): Promise {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [User],\n  })\n  findAll(): Promise {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: User,\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.usersService.findOne(id);\n  }\n\n  @Delete(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'Deleted successfully',\n  })\n  remove(@Param('id') id: string): Promise {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users_typeorm_example/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users_typeorm_example/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users_typeorm_example/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users_typeorm_example/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users_typeorm_example/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users_typeorm_example/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users_typeorm_example/users.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly usersRepository: Repository\n  ) {}\n\n  create(createUserDto: CreateUserDto): Promise {\n    const user = new User();\n    user.firstName = createUserDto.firstName;\n    user.lastName = createUserDto.lastName;\n    user.age = createUserDto.age;\n    user.gender = createUserDto.gender;\n    user.primaryMobileNumber = createUserDto.primaryMobileNumber;\n    user.primaryEmailId = createUserDto.primaryEmailId;\n    user.secondaryMobileNumber = createUserDto.secondaryMobileNumber;\n    user.secondaryEmailId = createUserDto.secondaryEmailId;\n    user.isActive = createUserDto.isActive;\n\n    return this.usersRepository.save(user);\n  }\n\n  async findAll(): Promise {\n    return this.usersRepository.find();\n  }\n\n  findOne(id: string): Promise {\n    return this.usersRepository.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.usersRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                client/proxy.config.ts\n            \n            variable\n            proxyConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                client/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                client/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                client/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                client/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                client/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MODULES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            TYPEORMMODULE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/config.controller.ts\n            \n            controller\n            ConfigController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/dto/config.dto.ts\n            \n            class\n            ConfigDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/entities/config.entity.ts\n            \n            class\n            ConfigEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/config/services/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resources/students/dto/create-student.dto.ts\n            \n            class\n            CreateStudentDto\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/resources/students/dto/update-student.dto.ts\n            \n            class\n            UpdateStudentDto\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/resources/students/entities/student.entity.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/resources/students/students.controller.ts\n            \n            controller\n            StudentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/resources/students/students.service.ts\n            \n            injectable\n            StudentsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/swaggerAPI.ts\n            \n            function\n            createSwaggerAPI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger_example/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/swagger_example/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/swagger_example/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/swagger_example/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/users_typeorm_example/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users_typeorm_example/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users_typeorm_example/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users_typeorm_example/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utils/shareDBcofig.factory.ts\n            \n            variable\n            dbConfigSetUp\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : 2.2.2\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            class-transformer : 0.4.0\n        \n            class-validator : 0.13.1\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.40\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../enum.ts)\n                        \n                        \n                            StudentCommunity   (src/.../enum.ts)\n                        \n                        \n                            UserRole   (src/.../create-user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : female\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StudentCommunity\n                    \n                \n                        \n                            \n                                 SC/ST\n                            \n                        \n                        \n                            \n                                Value : SC/ST\n                            \n                        \n                        \n                            \n                                 MBC\n                            \n                        \n                        \n                            \n                                Value : MBC\n                            \n                        \n                        \n                            \n                                 BC\n                            \n                        \n                        \n                            \n                                Value : BC\n                            \n                        \n                        \n                            \n                                 OC\n                            \n                        \n                        \n                            \n                                Value : OC\n                            \n                        \n                        \n                            \n                                 BCM\n                            \n                        \n                        \n                            \n                                Value : BCM\n                            \n                        \n            \n        \n\n    src/users_typeorm_example/dto/create-user.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Male\n                            \n                        \n                        \n                            \n                                Value : Male\n                            \n                        \n                        \n                            \n                                 Female\n                            \n                        \n                        \n                            \n                                Value : Female\n                            \n                        \n                        \n                            \n                                 Others\n                            \n                        \n                        \n                            \n                                Value : Others\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwaggerAPI   (src/.../swaggerAPI.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/swaggerAPI.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSwaggerAPI\n                        \n                    \n                \n            \n            \n                \ncreateSwaggerAPI(app: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n  \n  \n\nDescription\nBuilt using Nest,TypeORM,Swagger,Compodoc.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 srinivasan\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_StudentsModule\n\n\n\ncluster_StudentsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nStudentsModule\n\nStudentsModule\n\nAppModule -->\n\nStudentsModule->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nAppConfigService->ConfigModule\n\n\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStudentsService\n\nStudentsService\n\nStudentsModule -->\n\nStudentsService->StudentsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (client/.../test.ts)\n                        \n                        \n                            dbConfigSetUp   (src/.../shareDBcofig.factory.ts)\n                        \n                        \n                            environment   (client/.../environment.ts)\n                        \n                        \n                            environment   (client/.../environment.prod.ts)\n                        \n                        \n                            MODULES   (src/.../app.module.ts)\n                        \n                        \n                            proxyConfig   (client/.../proxy.config.ts)\n                        \n                        \n                            require   (client/.../test.ts)\n                        \n                        \n                            TYPEORMMODULE   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    client/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/utils/shareDBcofig.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dbConfigSetUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService: any): { [key: string]: any } => {\n  return {\n    type: 'mysql',\n    host: configService.get('DATABASE_HOST'),\n    port: configService.get('DATABASE_PORT'),\n    username: configService.get('DB_USER_NAME'),\n    password: configService.get('DB_PASSWORD'),\n    database: configService.get('DATABASE_NAME'),\n    autoLoadEntities: true,\n    synchronize: true,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    client/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    client/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    CoreModule,\n    // UsersModule,\n    // ConfigModule,\n    // UsersModule,\n    StudentsModule,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TYPEORMMODULE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TypeOrmModule.forRootAsync({\n    imports: [StudentsModule],\n    inject: [ConfigService],\n    useFactory: (configService: ConfigService) => DBconfig(configService),\n})\n                    \n                \n\n\n        \n    \n\n    client/proxy.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        proxyConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    context: ['/api/v1', '/api/v2'],\n    target: 'https://example.com',\n    secure: true,\n    changeOrigin: true,\n  },\n  {\n    context: ['**'], // Rest of other API call\n    target: 'http://somethingelse.com',\n    secure: false,\n    changeOrigin: true,\n  },\n  {\n    context: ['admin-ui'], // Rest of other API call\n    target: 'http://localhost:4200',\n    secure: false,\n    changeOrigin: true,\n    logLevel: 'debug',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
